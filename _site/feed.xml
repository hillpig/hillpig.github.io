<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-09T02:59:27-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">山猪</title><subtitle>方寸之间 点滴墨彩</subtitle><entry><title type="html">Spring boot - jackson 处理 JSON</title><link href="http://localhost:4000/java-spring-jackson/" rel="alternate" type="text/html" title="Spring boot - jackson 处理 JSON" /><published>2020-03-05T00:00:00-08:00</published><updated>2020-03-05T00:00:00-08:00</updated><id>http://localhost:4000/java-spring-jackson</id><content type="html" xml:base="http://localhost:4000/java-spring-jackson/">&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/www.thecuriousdev.org/wp-content/uploads/2018/12/lombok-builder-jackson.jpg?w=800&amp;amp;ssl=1&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;spring默认使用的是jackson处理json的序列化和反序列化&quot;&gt;spring默认使用的是jackson处理json的序列化和反序列化&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonIgnore&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;@JsonIgnore是jackson的注解，通常当做标志注解(没有要赋值的属性)，常用于属性上。&lt;/li&gt;
      &lt;li&gt;JSON序列化反序列化都会忽略该属性。&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nd&quot;&gt;@JsonIgnore&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonIgnoreProperties&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;@JsonIgnoreProperties是Jackson的注解，jackson1版本和2版本有区别，1版本只能放在类上，2版本类、方法、属性都可以，为了保持习惯，一般还是都放在model 类的类名上&lt;/li&gt;
      &lt;li&gt;ignoreUnknown属性，默认为false，此时反序列化json字符串时，有bean中没有的字段，就会抛出异常&lt;/li&gt;
      &lt;li&gt;value属性，默认为空，可以放入要忽略的字段，作用和@JsonIgnore一样，可以统一管理忽略字段&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c1&quot;&gt;//生成json时将name和age属性过滤&lt;/span&gt;
 &lt;span class=&quot;nd&quot;&gt;@JsonIgnoreProperties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;},{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;age&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;  &lt;span class=&quot;nc&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonIgnoreType&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;修饰类，忽略指定的类型的字段&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonProperty&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;@JsonProperty是Jackson的注解，jackson1版本和2版本区别很大，用于属性上、set/get方法上，该属性序列化后可重命名。&lt;/li&gt;
      &lt;li&gt;value属性，1、2版本一样，默认为”“，代表该属性序列化和反序列化时的key值&lt;/li&gt;
      &lt;li&gt;required属性，2.0版本新增属性，默认false，2.6版本之后只能用于@JsonCreator中。例子中required=true，当反序列化时，json串中没有x或y，就会报错。不实用，一般不用该属性&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nd&quot;&gt;@JsonProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nameJY&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// name值为 “暮色”&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nd&quot;&gt;@JsonProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;userIdStr&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUserIdStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonFormat&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;此注解用于属性或者方法上（最好是属性上），可以方便的把Date类型直接转化为我们想要的模式，比如@JsonFormat(pattern = “yyyy-MM-dd HH-mm-ss”)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cm&quot;&gt;/**
  * 格式化日期属性
  */&lt;/span&gt;
 &lt;span class=&quot;nd&quot;&gt;@JsonFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonUnwrapped&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;指定某个字段(类型是POJO)序列化成扁平化，而不是嵌套对象，在反序列化时再包装成对象&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nd&quot;&gt;@JsonUnwrapped&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pre_&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;_suf&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyValue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;//{&quot;name&quot;:&quot;杨正&quot;,&quot;pre_name_suf&quot;:null,&quot;pre_age_suf&quot;:0,&quot;pre_date_suf&quot;:null,&quot;age&quot;:24,&quot;date&quot;:&quot;2017-12-09&quot;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonView&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;可以定义视图&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nd&quot;&gt;@JsonView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserWithoutPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nd&quot;&gt;@JsonView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserWithPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWithPassword&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWithoutPassword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserWithoutPassword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;User{&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                 &lt;span class=&quot;s&quot;&gt;&quot;username='&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\''&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                 &lt;span class=&quot;s&quot;&gt;&quot;, password='&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\''&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
                 &lt;span class=&quot;sc&quot;&gt;'}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JsonViewTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nc&quot;&gt;ObjectMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectMapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
         &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;username\&quot;:\&quot;dubby.cn\&quot;,\&quot;password\&quot;:\&quot;123456\&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;c1&quot;&gt;//反序列化，使用视图&lt;/span&gt;
         &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readerWithView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UserWithoutPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;xxxx&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;c1&quot;&gt;//序列化，使用视图&lt;/span&gt;
         &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writerWithView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UserWithoutPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writerWithView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UserWithPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonSerialize&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;此注解用于属性或者getter方法上，用于在序列化时嵌入我们自定义的代码，比如序列化一个double时在其后面限制两位小数点。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@JsonDeserialize&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;此注解用于属性或者setter方法上，用于在反序列化时可以嵌入我们自定义的代码，类似于上面的@JsonSerialize&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="Java" /><category term="Spring Boot" /><summary type="html"></summary></entry><entry><title type="html">Ansible 学习 1</title><link href="http://localhost:4000/ansible/" rel="alternate" type="text/html" title="Ansible 学习 1" /><published>2020-03-04T00:00:00-08:00</published><updated>2020-03-04T00:00:00-08:00</updated><id>http://localhost:4000/ansible</id><content type="html" xml:base="http://localhost:4000/ansible/">&lt;p&gt;&lt;img src=&quot;https://shadow-soft.com/wp-content/uploads/2018/10/ansible-glue-tools.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;ansible快速入门&quot;&gt;Ansible快速入门&lt;/h1&gt;

&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;

&lt;h3 id=&quot;ansible是一款简单的运维自动化工具只需要使用ssh协议连接就可以来进行系统管理自动化执行命令部署等任务&quot;&gt;Ansible是一款简单的运维自动化工具，只需要使用ssh协议连接就可以来进行系统管理，自动化执行命令，部署等任务。&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Ansible的特点&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ansible不需要单独安装客户端，也不需要启动任何服务&lt;/li&gt;
  &lt;li&gt;ansible是Python中的一套完整的自动化执行任务模块&lt;/li&gt;
  &lt;li&gt;ansible playbook 采用yaml配置，对于自动化任务执行过一目了然&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Ansible组成结构&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Ansible&lt;/p&gt;

    &lt;p&gt;是Ansible的命令工具，核心执行工具；一次性或临时执行的操作都是通过该命令执行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ansible Playbook&lt;/p&gt;

    &lt;p&gt;任务剧本（又称任务集），编排定义Ansible任务集的配置文件，由Ansible顺序依次执行，yaml格式。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Inventory&lt;/p&gt;

    &lt;p&gt;Ansible管理主机的清单，默认是/etc/ansible/hosts文件。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Modules&lt;/p&gt;

    &lt;p&gt;Ansible执行命令的功能模块，Ansible2.3版本为止，共有1039个模块。还可以自定义模块。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Plugins&lt;/p&gt;

    &lt;p&gt;插件，模块功能的补充，常有连接类型插件，循环插件，变量插件，过滤插件，插件功能用的较少。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API&lt;/p&gt;

    &lt;p&gt;提供给第三方程序调用的应用程序编程接口。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;-a&quot;&gt;-A&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-A&lt;/strong&gt;参数指定客户端的用户代理标头，即&lt;strong&gt;User-Agent&lt;/strong&gt;。curl 的默认用户代理字符串是&lt;strong&gt;curl/[version]&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将&lt;strong&gt;User-Agent&lt;/strong&gt;改成 Chrome 浏览器。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令会移除&lt;strong&gt;User-Agent&lt;/strong&gt;标头。&lt;/p&gt;

&lt;p&gt;也可以通过 &lt;strong&gt;-H&lt;/strong&gt; 参数直接指定标头，更改&lt;strong&gt;User-Agent&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'User-Agent: php/1.0'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-b&quot;&gt;-b&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-b&lt;/strong&gt;参数用来向服务器发送 Cookie。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo=bar'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令会生成一个标头&lt;strong&gt;Cookie: foo=bar&lt;/strong&gt;，向服务器发送一个名为&lt;strong&gt;foo&lt;/strong&gt;、值为&lt;strong&gt;bar&lt;/strong&gt;的 Cookie。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo1=bar;foo2=bar2'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令发送两个 Cookie。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; cookies.txt https://www.google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令读取本地文件&lt;strong&gt;cookies.txt&lt;/strong&gt;，里面是服务器设置的 Cookie（参见 &lt;strong&gt;-c&lt;/strong&gt; 参数），将其发送到服务器。&lt;/p&gt;

&lt;h1 id=&quot;-c&quot;&gt;-c&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-c&lt;/strong&gt;参数将服务器设置的 Cookie 写入一个文件。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; cookies.txt https://www.google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将服务器的 HTTP 回应所设置 Cookie 写入文本文件&lt;strong&gt;cookies.txt&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&quot;-d&quot;&gt;-d&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-d&lt;/strong&gt;参数用于发送 POST 请求的数据体。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login=emma＆password=123'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'login=emma'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password=123'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST  https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 &lt;strong&gt;-d&lt;/strong&gt; 参数以后，HTTP 请求会自动加上标头&lt;strong&gt;Content-Type : application/x-www-form-urlencoded&lt;/strong&gt;。并且会自动将请求转为 POST 方法，因此可以省略 &lt;strong&gt;-X POST&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-d&lt;/strong&gt;参数可以读取本地文本文件的数据，向服务器发送。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@data.txt'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令读取&lt;strong&gt;data.txt&lt;/strong&gt;文件的内容，作为数据体向服务器发送。&lt;/p&gt;

&lt;h1 id=&quot;data-urlencode&quot;&gt;–data-urlencode&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;–data-urlencode&lt;/strong&gt;参数等同于 &lt;strong&gt;-d&lt;/strong&gt;，发送 POST 请求的数据体，区别在于会自动将发送的数据进行 URL 编码。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--data-urlencode&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'comment=hello world'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面代码中，发送的数据&lt;strong&gt;hello world&lt;/strong&gt;之间有一个空格，需要进行 URL 编码。&lt;/p&gt;

&lt;h1 id=&quot;-e&quot;&gt;-e&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-e&lt;/strong&gt;参数用来设置 HTTP 的标头&lt;strong&gt;Referer&lt;/strong&gt;，表示请求的来源。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;curl -e 'https://google.com?q=example' https://www.example.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将&lt;strong&gt;Referer&lt;/strong&gt;标头设为&lt;strong&gt;https://google.com?q=example&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-H&lt;/strong&gt;参数可以通过直接添加标头&lt;strong&gt;Referer&lt;/strong&gt;，达到同样效果。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;curl -H 'Referer: https://google.com?q=example' https://www.example.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-f&quot;&gt;-F&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-F&lt;/strong&gt;参数用来向服务器上传二进制文件。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file=@photo.png'&lt;/span&gt; https://google.com/profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令会给 HTTP 请求加上标头&lt;strong&gt;Content-Type: multipart/form-data&lt;/strong&gt;，然后将文件&lt;strong&gt;photo.png&lt;/strong&gt;作为&lt;strong&gt;file&lt;/strong&gt;字段上传。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-F&lt;/strong&gt;参数可以指定 MIME 类型。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file=@photo.png;type=image/png'&lt;/span&gt; https://google.com/profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令指定 MIME 类型为&lt;strong&gt;image/png&lt;/strong&gt;，否则 curl 会把 MIME 类型设为&lt;strong&gt;application/octet-stream&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-F&lt;/strong&gt;参数也可以指定文件名。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file=@photo.png;filename=me.png'&lt;/span&gt; https://google.com/profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令中，原始文件名为&lt;strong&gt;photo.png&lt;/strong&gt;，但是服务器接收到的文件名为&lt;strong&gt;me.png&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&quot;-g&quot;&gt;-G&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-G&lt;/strong&gt;参数用来构造 URL 的查询字符串。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'q=kitties'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'count=20'&lt;/span&gt; https://google.com/search
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令会发出一个 GET 请求，实际请求的 URL 为&lt;strong&gt;https://google.com/search?q=kitties&amp;amp;count=20&lt;/strong&gt;。如果省略 &lt;strong&gt;–G&lt;/strong&gt;，会发出一个 POST 请求。&lt;/p&gt;

&lt;p&gt;如果数据需要 URL 编码，可以结合 &lt;strong&gt;–data–urlencode&lt;/strong&gt;参数。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--data-urlencode&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'comment=hello world'&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-h&quot;&gt;-H&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-H&lt;/strong&gt;参数添加 HTTP 请求的标头。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Accept-Language: en-US'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令添加 HTTP 标头&lt;strong&gt;Accept-Language: en-US&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Accept-Language: en-US'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Secret-Message: xyzzy'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令添加两个 HTTP 标头。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;login&quot;: &quot;emma&quot;, &quot;pass&quot;: &quot;123&quot;}'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令添加 HTTP 请求的标头是&lt;strong&gt;Content-Type: application/json&lt;/strong&gt;，然后用 &lt;strong&gt;-d&lt;/strong&gt;参数发送 JSON 数据。&lt;/p&gt;

&lt;h1 id=&quot;-i&quot;&gt;-i&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-i&lt;/strong&gt;参数打印出服务器回应的 HTTP 标头。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令收到服务器回应后，先输出服务器回应的标头，然后空一行，再输出网页的源码。&lt;/p&gt;

&lt;h1 id=&quot;-i-1&quot;&gt;-I&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-I&lt;/strong&gt;参数向服务器发出 HEAD 请求，然会将服务器返回的 HTTP 标头打印出来。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令输出服务器对 HEAD 请求的回应。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–head&lt;/strong&gt;参数等同于 &lt;strong&gt;-I&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--head&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-k&quot;&gt;-k&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-k&lt;/strong&gt;参数指定跳过 SSL 检测。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令不会检查服务器的 SSL 证书是否正确。&lt;/p&gt;

&lt;h1 id=&quot;-l&quot;&gt;-L&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-L&lt;/strong&gt;参数会让 HTTP 请求跟随服务器的重定向。curl 默认不跟随重定向。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tweet=hi'&lt;/span&gt; https://api.twitter.com/tweet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;limit-rate&quot;&gt;–limit-rate&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;–limit-rate&lt;/strong&gt;用来限制 HTTP 请求和回应的带宽，模拟慢网速的环境。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--limit-rate&lt;/span&gt; 200k https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将带宽限制在每秒 200K 字节。&lt;/p&gt;

&lt;h1 id=&quot;-o&quot;&gt;-o&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-o&lt;/strong&gt;参数将服务器的回应保存成文件，等同于wget命令。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; example.html https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将&lt;strong&gt;www.example.com&lt;/strong&gt;保存成&lt;strong&gt;example.html&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&quot;-o-1&quot;&gt;-O&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-O&lt;/strong&gt;参数将服务器回应保存成文件，并将 URL 的最后部分当作文件名。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; https://www.example.com/foo/bar.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将服务器回应保存成文件，文件名为&lt;strong&gt;bar.html&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&quot;-s&quot;&gt;-s&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-s&lt;/strong&gt;参数将不输出错误和进度信息。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令一旦发生错误，不会显示错误信息。不发生错误的话，会正常显示运行结果。&lt;/p&gt;

&lt;p&gt;如果想让 curl 不产生任何输出，可以使用下面的命令。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /dev/null https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-s-1&quot;&gt;-S&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-S&lt;/strong&gt;参数指定只输出错误信息，通常与 &lt;strong&gt;-s&lt;/strong&gt;一起使用。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /dev/null https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令没有任何输出，除非发生错误。&lt;/p&gt;

&lt;h1 id=&quot;-u&quot;&gt;-u&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-u&lt;/strong&gt;参数用来设置服务器认证的用户名和密码。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bob:12345'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令设置用户名为&lt;strong&gt;bob&lt;/strong&gt;，密码为&lt;strong&gt;12345&lt;/strong&gt;，然后将其转为 HTTP 标头&lt;strong&gt;Authorization: Basic Ym9iOjEyMzQ1&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;curl 能够识别 URL 里面的用户名和密码。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl https://bob:12345@google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令能够识别 URL 里面的用户名和密码，将其转为上个例子里面的 HTTP 标头。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bob'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令只设置了用户名，执行后，curl 会提示用户输入密码。&lt;/p&gt;

&lt;h1 id=&quot;-v&quot;&gt;-v&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-v&lt;/strong&gt;参数输出通信的整个过程，用于调试。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;–trace&lt;/strong&gt;参数也可以用于调试，还会输出原始的二进制数据。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--trace&lt;/span&gt; - https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-x&quot;&gt;-x&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-x&lt;/strong&gt;参数指定 HTTP 请求的代理。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; socks5://james:cats@myproxy.com:8080 https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令指定 HTTP 请求通过&lt;strong&gt;myproxy.com:8080&lt;/strong&gt;的 socks5 代理发出。&lt;/p&gt;

&lt;p&gt;如果没有指定代理协议，默认为 HTTP。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; james:cats@myproxy.com:8080 https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令中，请求的代理使用 HTTP 协议。&lt;/p&gt;

&lt;h1 id=&quot;-x-1&quot;&gt;-X&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-X&lt;/strong&gt;参数指定 HTTP 请求的方法。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令对&lt;strong&gt;https://www.example.com&lt;/strong&gt;发出 POST 请求。&lt;/p&gt;

&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://catonmat.net/cookbooks/curl&quot; title=&quot;curl cookbook&quot;&gt;curl cookbook&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/09/curl.html&quot; title=&quot;curl 初学者教程&quot;&gt;curl 初学者教程&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Ansible" /><summary type="html"></summary></entry><entry><title type="html">English Vocabulary - Body</title><link href="http://localhost:4000/english-body/" rel="alternate" type="text/html" title="English Vocabulary - Body" /><published>2020-03-01T00:00:00-08:00</published><updated>2020-03-01T00:00:00-08:00</updated><id>http://localhost:4000/english-body</id><content type="html" xml:base="http://localhost:4000/english-body/">&lt;p&gt;&lt;img src=&quot;https://cdn.britannica.com/07/192107-050-CE043374/anatomy-charts-human-body-muscle-systems-skeletal.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;头面部&quot;&gt;头面部&lt;/h1&gt;

&lt;p&gt;beard   胡须
cheek	脸颊
chin	下巴
head	头
hair    头发
ear 耳朵
eye	眼睛
eyebrow	眉毛
eardrum	耳膜
earlobe	耳垂
eyelash	睫毛
eyelid	眼睑
forehead	额头
freckles	雀斑
jaw	下颌
lip	嘴唇
mouth	嘴巴
nose	鼻子
nostril	鼻孔
moustache	胡子
tongue	舌头
tooth (复数形式：teeth)	牙齿
wrinkles	皱纹&lt;/p&gt;

&lt;h1 id=&quot;上半身&quot;&gt;上半身&lt;/h1&gt;

&lt;p&gt;Adam’s apple	喉结
arm	胳膊
armpit	腋窝
back	背
breast	胸
chest	胸口
elbow	肘
hand	手
finger	手指
fingernail	指甲
forearm	前臂
knuckle	指关节
navel / belly button	肚脐
neck	脖子
nipple	乳头
palm	手掌
shoulder	肩膀
throat	喉咙
thumb	拇指
waist	腰
wrist	手腕关节&lt;/p&gt;

&lt;h1 id=&quot;下半身&quot;&gt;下半身&lt;/h1&gt;

&lt;p&gt;ankle	脚踝
anus	肛门
belly	肚子
big toe	拇指
bottom (俚语：bum)	屁股
buttocks	臀部
calf	小腿
foot (复数形式：feet)	脚
genitals	生殖器
groin	腹股沟
heel	脚后跟
hip	臀部
knee	膝盖
leg	脚
penis	阴茎
pubic hair	阴毛
shin	胫骨
sole	脚掌
testicles	睾丸
thigh	大腿
toe	脚趾
toenail	脚趾甲
vagina	阴道&lt;/p&gt;

&lt;h1 id=&quot;眼部&quot;&gt;眼部&lt;/h1&gt;
&lt;p&gt;cornea	角膜
eye socket	眼窝
eyeball	眼球
iris	虹膜
retina	视网膜
pupil	瞳孔&lt;/p&gt;

&lt;h1 id=&quot;体内&quot;&gt;体内&lt;/h1&gt;

&lt;p&gt;Achilles tendon	跟腱
artery	动脉
appendix	阑尾
bladder	膀胱
blood vessel	血管
brain	大脑
cartilage	软骨
colon	结肠
gall bladder / gallbladder	胆囊
heart	心脏
intestines	肠道
large intestine	大肠
small intestine	小肠
kidneys	肾脏
ligament	韧带
liver	肝
lungs	肺
oesophagus	食道
pancreas	胰腺
organ	器官
prostate gland / prostate	前列腺
rectum	直肠
spleen	脾
stomach	胃
tendon	腱
tonsils	扁桃体
vein	血管
windpipe	气管
womb / uterus	子宫&lt;/p&gt;

&lt;h1 id=&quot;骨骼&quot;&gt;骨骼&lt;/h1&gt;

&lt;p&gt;collarbone / clavicle	锁骨
thigh bone / femur	股骨
humerus	肱骨
kneecap	膝盖骨
pelvis	骨盆
rib	肋骨
rib cage	胸腔
skeleton	骨架
skull	头盖骨
spine / backbone	脊柱
vertebra (复数形式：vertebrae)	椎骨&lt;/p&gt;

&lt;h1 id=&quot;体液&quot;&gt;体液&lt;/h1&gt;
&lt;p&gt;bile	胆汁
blood	血
mucus	黏液
phlegm	痰
saliva / spit	唾液
semen	精液
sweat / perspiration	汗
tears	眼泪
urine	尿液
vomit	呕吐物&lt;/p&gt;

&lt;h1 id=&quot;其他单词&quot;&gt;其他单词&lt;/h1&gt;

&lt;p&gt;bone	骨头
fat	肥胖
flesh	肉体
gland	腺
joint	关节
limb	肢
muscle	肌肉
nerve	神经
skin	皮肤&lt;/p&gt;

&lt;p&gt;digestive system	消化系统
nervous system	神经系统
to breathe	呼吸
to cry	哭
to hiccup	打嗝
to have the hiccups	打嗝
to sneeze	打喷嚏
to sweat / to perspire	出汗
to urinate	排尿
to vomit	呕吐
to yawn	打哈欠&lt;/p&gt;</content><author><name></name></author><category term="English" /><summary type="html"></summary></entry><entry><title type="html">Spring Boot - Hibernate - OneToMany &amp;amp; ManyToOne Mapping</title><link href="http://localhost:4000/java-onetomany-manytoone/" rel="alternate" type="text/html" title="Spring Boot - Hibernate - OneToMany &amp; ManyToOne Mapping" /><published>2020-02-27T00:00:00-08:00</published><updated>2020-02-27T00:00:00-08:00</updated><id>http://localhost:4000/java-onetomany-manytoone</id><content type="html" xml:base="http://localhost:4000/java-onetomany-manytoone/">&lt;p&gt;&lt;img src=&quot;https://i0.wp.com/blogs.innovationm.com/wp-content/uploads/2018/08/Hibernate-Mapping.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;什么是javabean&quot;&gt;什么是JavaBean&lt;/h1&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;lombok既是一个IDE插件,也是一个项目要依赖的jar包.lombok是依赖jar包的原因是因为编译时要用它的注解.是插件的原因是他要在编译器编译时通过操作AST(抽象语法树)改变字节码生成.也就是说他可以改变java语法. 他不像spring的依赖注入或者hibernate的orm一样是运行时的特性,而是编译时的特性.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;javabean作用&quot;&gt;JavaBean作用&lt;/h1&gt;

    &lt;p&gt;JavaBean在J2EE开发中，通常用于封装数据，对于遵循以上写法的JavaBean组件，其它程序可以通过反射技术实例化JavaBean对象，并且通过反射那些遵守命名规范的方法，从而获知JavaBean的属性，进而调用其属性保存数据。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;javabean的属性&quot;&gt;JavaBean的属性&lt;/h1&gt;

    &lt;ul&gt;
      &lt;li&gt;JavaBean的属性可以是任意类型，并且一个JavaBean可以有多个属性。每个属性通常都需要具有相应的setter、 getter方法，setter方法称为属性修改器，getter方法称为属性访问器。&lt;/li&gt;
      &lt;li&gt;属性修改器必须以小写的set前缀开始，后跟属性名，且属性名的第一个字母要改为大写，例如，name属性的修改器名称为setName，password属性的修改器名称为setPassword。&lt;/li&gt;
      &lt;li&gt;属性访问器通常以小写的get前缀开始，后跟属性名，且属性名的第一个字母也要改为大写，例如，name属性的访问器名称为getName，password属性的访问器名称为getPassword。&lt;/li&gt;
      &lt;li&gt;一个JavaBean的某个属性也可以只有set方法或get方法，这样的属性通常也称之为只写、只读属性。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;java-bean类实现serializable接口的原因&quot;&gt;Java Bean类实现Serializable接口的原因&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Serializable接口能帮我们做些什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如上所述，读写对象会有什么问题呢？比如：我要将对象写入一个磁盘文件而后再将其读出来会有什么问题吗？别急，其中一个最大的问题就是对象引用！举个例子来说：假如我有两个类，分别是A和B，B类中含有一个指向A类对象的引用，现在我们对两个类进行实例化{ A a = new A(); B b = new B(); }，这时在内存中实际上分配了两个空间，一个存储对象a，一个存储对象b，接下来我们想将它们写入到磁盘的一个文件中去，就在写入文件时出现了问题！因为对象b包含对对象a的引用，所以系统会自动的将a的数据复制一份到b中，这样的话当我们从文件中恢复对象时(也就是重新加载到内存中)时，内存分配了三个空间，而对象a同时在内存中存在两份，想一想后果吧，如果我想修改对象a的数据的话，那不是还要搜索它的每一份拷贝来达到对象数据的一致性，这不是我们所希望的！&lt;/p&gt;

&lt;p&gt;以下序列化机制的解决方案：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 保存到磁盘的所有对象都获得一个序列号(1, 2, 3等等)
2. 当要保存一个对象时，先检查该对象是否被保存了
3. 如果以前保存过，只需写入&quot;与已经保存的具有序列号x的对象相同&quot;的标记，否则，保存该对象通过以上的步骤序列化机制解决了对象引用的问题！
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在对对象进行实例化的过程中相关注意事项&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 读取对象的顺序必须与写入的顺序相同
2. 如果有不能被序列化的对象，执行期间就会抛出NotSerializableException异常
3. 序列化时，只对对象的状态进行保存，而不管对象的方法
2. 当一个父类实现序列化，子类自动实现序列化，不需要显式实现Serializable接口
4. 当一个对象的实例变量引用其他对象，序列化该对象时也把引用对象进行序列化，而且会是递归的方式。 （序列化程序会将对象版图上的所有东西储存下来，这样才能让该对象恢复到原来的状态）
5. 如果子类实现Serializable接口而父类未实现时，父类不会被序列化，但此时父类必须有个无参构造方法，否则会抛InvalidClassException异常，因为反序列化时会恢复原有子对象的状态，而父类的成员变量也是原有子对象的一部分。由于父类没有实现序列化接口，即使没有显示调用，也会默认执行父类的无参构造函数使变量初始化
6. 并非所有的对象都可以序列化
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;至于为什么不可以，有很多原因了，比如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 安全方面的原因，比如一个对象拥有private，public等field，对于一个要传输的对象，比如写到文件，或者进行RMI传输  等等，在序列化进行传输的过程中，这个对象的private等域是不受保护的。
2. 资源分配方面的原因，比如socket，thread类，如果可以序列化，进行传输或者保存，也无法对他们进行重新的资源分配，而且，也是没有必要这样实现。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;深入理解&quot;&gt;深入理解&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. 序列化算法透析&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Serialization（序列化）是一种将对象以一连串的字节描述的过程；反序列化deserialization是一种将这些字节重建成一个对象的过程。&lt;/p&gt;

&lt;p&gt;序列化算法一般会按步骤做如下事情：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;将对象实例相关类的描述。&lt;/li&gt;
  &lt;li&gt;递归地输出类的超类描述直到不再有超类。&lt;/li&gt;
  &lt;li&gt;从最顶层的超类开始输出对象实例的实际数据值。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. 序列化ID的问题&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;serialVersionUID适用于JAVA的序列化机制。简单来说，Java的序列化机制是通过判断类的serialVersionUID来验证版本一致性的。
在进行反序列化时，JVM会把传来的字节流中的serialVersionUID与本地相应实体类的serialVersionUID进行比较，如果相同就认为是一致的，可以进行反序列化，否则就会出现序列化版本不一致的异常，即是InvalidCastException。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 序列化存储规则&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Java 序列化机制为了节省磁盘空间，具有特定的存储规则，当写入文件的为同一对象时，并不会再将对象的内容进行存储，而只是再次存储一份引用；
序列化到同一个文件时，如第二次修改了相同对象属性值再次保存时候，虚拟机根据引用关系知道已经有一个相同对象已经写入文件，因此只保存第二次写的引用，所以读取时，都是第一次保存的对象。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/cn/java/j-lo-serial/&quot;&gt;详细介绍&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 多次序列化的问题&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在一次的序列化的过程中，ObjectOutputStream 会在文件开始的地方写入一个 Header 的信息到文件中。于是在多次序列化的过程中就会继续在文件末尾（本次序列化的开头）写入 Header 的信息，这时如果进行反序列化的对象的时候会报错：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StreamCorruptedException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invalid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;code:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_6145ed810100z143.html&quot;&gt;解决方法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. 影响序列化&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;transient关键字&lt;/li&gt;
  &lt;li&gt;writeObject()方法与readObject()方法&lt;/li&gt;
  &lt;li&gt;Externalizable接口&lt;/li&gt;
  &lt;li&gt;readResolve()方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://projectlombok.org/&quot; title=&quot;lombok的官方地址&quot;&gt;lombok的官方地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rzwitserloot/lombok&quot; title=&quot;lombok的Github地址&quot;&gt;lombok的Github地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/42348457&quot; title=&quot;参考文章 1&quot;&gt;参考文章 1 《Java开发中用到的，lombok是什么？》&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5a6eceb8f265da3e467555fe&quot; title=&quot;参考文章 1&quot;&gt;参考文章 2 《十分钟搞懂Lombok使用与原理》&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Java" /><category term="Spring Boot" /><summary type="html"></summary></entry><entry><title type="html">Java - lombok</title><link href="http://localhost:4000/java-lombok/" rel="alternate" type="text/html" title="Java - lombok" /><published>2020-02-26T00:00:00-08:00</published><updated>2020-02-26T00:00:00-08:00</updated><id>http://localhost:4000/java-lombok</id><content type="html" xml:base="http://localhost:4000/java-lombok/">&lt;p&gt;&lt;img src=&quot;https://huongdanjava.com/wp-content/uploads/2017/08/lombok.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IDEA =&amp;gt; Settings =&amp;gt; Plugins =&amp;gt; Browse repositories =&amp;gt; lombok ，点击安装，安装提示重启 IDEA，安装成功。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;引入依赖&quot;&gt;引入依赖&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;在自己的项目里添加 lombok 的编译支持，在 pom 文件里面添加 dependency

```java
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.16.18&amp;lt;/version&amp;gt;
        &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;注释&quot;&gt;注释&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;@Data&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;提供类所有属性的 get 和 set 方法&lt;/li&gt;
      &lt;li&gt;此外还提供了equals、canEqual、hashCode、toString 方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Setter&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 属性 上&lt;/li&gt;
      &lt;li&gt;为单个属性提供 set 方法&lt;/li&gt;
      &lt;li&gt;注解在 类 上，为该类所有的属性提供 set 方法， 都提供默认构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Getter&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 属性 上&lt;/li&gt;
      &lt;li&gt;为单个属性提供 get 方法&lt;/li&gt;
      &lt;li&gt;注解在 类 上，为该类所有的属性提供 get 方法，都提供默认构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Log4j&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;为类提供一个 属性名为 log 的 log4j 日志对象，提供默认构造方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@AllArgsConstructor&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;为类提供一个全参的构造方法，加了这个注解后，类中不提供默认构造方法了。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@NoArgsConstructor&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;为类提供一个无参的构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@EqualsAndHashCode&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上,&lt;/li&gt;
      &lt;li&gt;可以生成 equals、canEqual、hashCode 方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@NonNull&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 属性 上&lt;/li&gt;
      &lt;li&gt;自动产生一个关于此参数的非空检查，如果参数为空，则抛出一个空指针异常，也会有一个默认的无参构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Cleanup&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解用在 变量 上&lt;/li&gt;
      &lt;li&gt;可以保证此变量代表的资源会被自动关闭，默认是调用资源的 close() 方法，如果该资源有其它关闭方法，可使用 @Cleanup(“methodName”) 来指定要调用的方法，- 也会生成默认的构造方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@ToString&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;可以生成所有参数的 toString 方法，还会生成默认的构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@RequiredArgsConstructor&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解用在 类 上，&lt;/li&gt;
      &lt;li&gt;使用类中所有带有 @NonNull 注解的或者带有 final 修饰的成员变量生成对应的构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Value&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解用在 类 上&lt;/li&gt;
      &lt;li&gt;会生成含所有参数的构造方法，get 方法&lt;/li&gt;
      &lt;li&gt;此外还提供了equals、hashCode、toString 方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@SneakyThrows&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 方法 上&lt;/li&gt;
      &lt;li&gt;可以将方法中的代码用 try-catch 语句包裹起来，捕获异常并在 catch 中用 Lombok.sneakyThrow(e) 把异常抛出&lt;/li&gt;
      &lt;li&gt;可以使用 @SneakyThrows(Exception.class) 的形式指定抛出哪种异常&lt;/li&gt;
      &lt;li&gt;会生成默认的构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Synchronized&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类方法 或者 实例方法 上&lt;/li&gt;
      &lt;li&gt;效果和 synchronized 关键字相同，区别在于锁对象不同，对于类方法和实例方法，synchronized 关键字的锁对象分别是类的 class 对象和 this 对象，而 @Synchronized 的锁对象分别是 私有静态 final 对象 lock 和 私有 final 对象 lock，当然，也可以自己指定锁对象&lt;/li&gt;
      &lt;li&gt;此外也提供默认的构造方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5dde71ddf265da06051d00ab&quot; title=&quot;掘金&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/32779910&quot; title=&quot;知乎&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Java" /><summary type="html"></summary></entry><entry><title type="html">安装配置 Intellij Idea</title><link href="http://localhost:4000/intellij/" rel="alternate" type="text/html" title="安装配置 Intellij Idea" /><published>2020-02-26T00:00:00-08:00</published><updated>2020-02-26T00:00:00-08:00</updated><id>http://localhost:4000/intellij</id><content type="html" xml:base="http://localhost:4000/intellij/">&lt;p&gt;&lt;img src=&quot;https://d3nmt5vlzunoa1.cloudfront.net/idea/files/2019/11/blog@2x-3.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IDEA =&amp;gt; Settings =&amp;gt; Plugins =&amp;gt; Browse repositories =&amp;gt; lombok ，点击安装，安装提示重启 IDEA，安装成功。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;引入依赖&quot;&gt;引入依赖&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;在自己的项目里添加 lombok 的编译支持，在 pom 文件里面添加 dependency

```java
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.16.18&amp;lt;/version&amp;gt;
        &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;注释&quot;&gt;注释&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;@Data&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;提供类所有属性的 get 和 set 方法&lt;/li&gt;
      &lt;li&gt;此外还提供了equals、canEqual、hashCode、toString 方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Setter&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 属性 上&lt;/li&gt;
      &lt;li&gt;为单个属性提供 set 方法&lt;/li&gt;
      &lt;li&gt;注解在 类 上，为该类所有的属性提供 set 方法， 都提供默认构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Getter&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 属性 上&lt;/li&gt;
      &lt;li&gt;为单个属性提供 get 方法&lt;/li&gt;
      &lt;li&gt;注解在 类 上，为该类所有的属性提供 get 方法，都提供默认构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Log4j&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;为类提供一个 属性名为 log 的 log4j 日志对象，提供默认构造方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@AllArgsConstructor&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;为类提供一个全参的构造方法，加了这个注解后，类中不提供默认构造方法了。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@NoArgsConstructor&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;为类提供一个无参的构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@EqualsAndHashCode&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上,&lt;/li&gt;
      &lt;li&gt;可以生成 equals、canEqual、hashCode 方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@NonNull&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 属性 上&lt;/li&gt;
      &lt;li&gt;自动产生一个关于此参数的非空检查，如果参数为空，则抛出一个空指针异常，也会有一个默认的无参构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Cleanup&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解用在 变量 上&lt;/li&gt;
      &lt;li&gt;可以保证此变量代表的资源会被自动关闭，默认是调用资源的 close() 方法，如果该资源有其它关闭方法，可使用 @Cleanup(“methodName”) 来指定要调用的方法，- 也会生成默认的构造方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@ToString&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类 上&lt;/li&gt;
      &lt;li&gt;可以生成所有参数的 toString 方法，还会生成默认的构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@RequiredArgsConstructor&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解用在 类 上，&lt;/li&gt;
      &lt;li&gt;使用类中所有带有 @NonNull 注解的或者带有 final 修饰的成员变量生成对应的构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Value&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解用在 类 上&lt;/li&gt;
      &lt;li&gt;会生成含所有参数的构造方法，get 方法&lt;/li&gt;
      &lt;li&gt;此外还提供了equals、hashCode、toString 方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@SneakyThrows&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 方法 上&lt;/li&gt;
      &lt;li&gt;可以将方法中的代码用 try-catch 语句包裹起来，捕获异常并在 catch 中用 Lombok.sneakyThrow(e) 把异常抛出&lt;/li&gt;
      &lt;li&gt;可以使用 @SneakyThrows(Exception.class) 的形式指定抛出哪种异常&lt;/li&gt;
      &lt;li&gt;会生成默认的构造方法。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@Synchronized&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;注解在 类方法 或者 实例方法 上&lt;/li&gt;
      &lt;li&gt;效果和 synchronized 关键字相同，区别在于锁对象不同，对于类方法和实例方法，synchronized 关键字的锁对象分别是类的 class 对象和 this 对象，而 @Synchronized 的锁对象分别是 私有静态 final 对象 lock 和 私有 final 对象 lock，当然，也可以自己指定锁对象&lt;/li&gt;
      &lt;li&gt;此外也提供默认的构造方法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5dde71ddf265da06051d00ab&quot; title=&quot;掘金&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/32779910&quot; title=&quot;知乎&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Java" /><category term="IDE" /><summary type="html"></summary></entry><entry><title type="html">Programming - Idempotent</title><link href="http://localhost:4000/idempotent/" rel="alternate" type="text/html" title="Programming - Idempotent" /><published>2020-02-24T00:00:00-08:00</published><updated>2020-02-24T00:00:00-08:00</updated><id>http://localhost:4000/idempotent</id><content type="html" xml:base="http://localhost:4000/idempotent/">&lt;p&gt;&lt;img src=&quot;https://image.slidesharecdn.com/cloudstock-2010-12-building-a-great-api-101212184238-phpapp01/95/building-a-great-api-evan-cooke-cloudstock-december-2010-21-728.jpg?cb=1292199082&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;现如今我们的系统大多拆分为分布式SOA，或者微服务，一套系统中包含了多个子系统服务，而一个子系统服务往往会去调用另一个服务，而服务调用服务无非就是使用RPC通信或者restful，既然是通信，那么就有可能再服务器处理完毕后返回结果的时候挂掉，这个时候用户端发现很久没有反应，那么就会多次点击按钮，这样请求有多次，那么处理数据的结果是否要统一呢？那是肯定的！尤其再支付场景。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;幂等性&lt;/strong&gt;：就是用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用。举个最简单的例子，那就是支付，用户购买商品使用约支付，支付扣款成功，但是返回结果的时候网络异常，此时钱已经扣了，用户再次点击按钮，此时会进行第二次扣款，返回结果成功，用户查询余额返发现多扣钱了，流水记录也变成了两条．．．&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;在以前的单应用系统中，我们只需要把数据操作放入事务中即可，发生错误立即回滚，但是再响应客户端的时候也有可能出现网络中断或者异常等等。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;在&lt;strong&gt;增删改查&lt;/strong&gt;4个操作中，尤为注意就是&lt;strong&gt;增加&lt;/strong&gt;或者&lt;strong&gt;修改&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;查询&lt;/em&gt;对于结果是不会有改变的;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;删除&lt;/em&gt;只会进行一次，用户多次点击产生的结果一样;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;修改&lt;/em&gt;在大多场景下结果一样;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;em&gt;增加&lt;/em&gt;在重复提交的场景下会出现;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;那么如何设计接口才能做到幂等呢？&lt;/p&gt;

&lt;h2 id=&quot;方法一单次支付请求也就是直接支付了不需要额外的数据库操作了这个时候发起异步请求创建一个唯一的ticketid就是门票这张门票只能使用一次就作废具体步骤如下&quot;&gt;方法一、单次支付请求，也就是直接支付了，不需要额外的数据库操作了，这个时候发起异步请求创建一个唯一的ticketId，就是门票，这张门票只能使用一次就作废，具体步骤如下：&lt;/h2&gt;

&lt;p&gt;异步请求获取门票
调用支付，传入门票
根据门票ID查询此次操作是否存在，如果存在则表示该操作已经执行过，直接返回结果；如果不存在，支付扣款，保存结果
返回结果到客户端
如果步骤4通信失败，用户再次发起请求，那么最终结果还是一样的&lt;/p&gt;

&lt;h2 id=&quot;方法二分布式环境下各个服务相互调用&quot;&gt;方法二、分布式环境下各个服务相互调用&lt;/h2&gt;

&lt;p&gt;这边就要举例我们的系统了，我们支付的时候先要扣款，然后更新订单，这个地方就涉及到了订单服务以及支付服务了。&lt;/p&gt;

&lt;p&gt;用户调用支付，扣款成功后，更新对应订单状态，然后再保存流水。&lt;/p&gt;

&lt;p&gt;而在这个地方就没必要使用门票ticketId了，因为会比较闲的麻烦&lt;/p&gt;

&lt;p&gt;（支付状态：未支付，已支付）&lt;/p&gt;

&lt;p&gt;步骤：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;查询订单支付状态&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果已经支付，直接返回结果&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果未支付，则支付扣款并且保存流水&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;返回支付结果&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果步骤4通信失败，用户再次发起请求，那么最终结果还是一样的&lt;/p&gt;

&lt;p&gt;对于做过支付的朋友，幂等，也可以称之为冲正，保证客户端与服务端的交易一致性，避免多次扣款。&lt;/p&gt;

&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30493445&quot; title=&quot;什么是分布式系统中的幂等性&quot;&gt;原文 《什么是分布式系统中的幂等性》&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Programming" /><summary type="html"></summary></entry><entry><title type="html">English Vocabulary - Common Expressions</title><link href="http://localhost:4000/english-common-words/" rel="alternate" type="text/html" title="English Vocabulary - Common Expressions" /><published>2020-02-24T00:00:00-08:00</published><updated>2020-02-24T00:00:00-08:00</updated><id>http://localhost:4000/english-common-words</id><content type="html" xml:base="http://localhost:4000/english-common-words/">&lt;p&gt;&lt;img src=&quot;https://scx1.b-cdn.net/csz/news/800/2017/studyreadsbe.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Hiccup 打嗝&lt;/p&gt;

    &lt;p&gt;a loud noise that you make in the throat without wanting to, caused by a sudden tightening of a muscle just below the chest and usually happening repeatedly&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;I’ve got the hiccups.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;belch 打嗝&lt;/p&gt;

    &lt;p&gt;to allow air from the stomach to come out noisily through the mouth:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;He belched noisily.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Snore 打鼾&lt;/p&gt;

    &lt;p&gt;to breathe in a very noisy way while you are sleeping:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Sometimes my husband snores so loudly, it keeps me awake at night.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Do you know any cures for snoring?&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pick one’s nose 挖鼻孔&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Don’t pick your nose on public transportation.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;’’’
     booger 鼻屎&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ear wax 耳屎

 sleep / dry stuff / dry crap / crusty stuff 眼屎  '''
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;floss one’s teeth / pick one’s teeth 剔牙&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;I often floss my teeth after dinner.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;It is considered rude to pick your teeth in front of other people.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;He picked his teeth with a toothpick.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;braise 挠痒痒&lt;/p&gt;

    &lt;p&gt;With braises, where you’re adding the least amount of liquid required to cook the meat or vegetables, stews require full submersion, and usually call for the meat or vegetables to be cut into unifiorm pieces for even cooking.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;red braised pork belly 红烧肉&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Bring the water to a boil, turn down to medium low heat, and let it simmer for 40 minutes.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Because it preserves all the nutrients in your food.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;tickle 胳肢&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;The bigger girls used to chase me and tickle me.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;comb 梳头 / 梳子 / 鸡冠&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Your hair needs a good comb.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;She bent to retrieve her comb from the floor.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Your hair is so tangled that I cannot comb it.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;bend / stoop (down) / bow 弯腰&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;He bent to a squat and gathered the puppies on his lap.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;She reached down, touching her toes with opposite hands.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;I wanted to duck down and slip past but they saw me.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;roast 踮脚&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;roasted chicken 烤鸭&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;grilled chicken 烤鸡&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;fart / break wind 放屁&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Don’t fart in my room!&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;The fox broke wind in order to escape those hunting dogs.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;cross one’s legs / sit cross-legged 盘腿&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;We sat cross-legged on the blanket.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;squat 蹲下&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;breathe	呼吸&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;cry	哭&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;to hiccup	打嗝&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sneeze	打喷嚏&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sweat / perspire    出汗&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;urinate 排尿&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;yawn    打哈欠&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="English" /><summary type="html"></summary></entry><entry><title type="html">English Vocabulary - Disease</title><link href="http://localhost:4000/english-disease/" rel="alternate" type="text/html" title="English Vocabulary - Disease" /><published>2020-02-24T00:00:00-08:00</published><updated>2020-02-24T00:00:00-08:00</updated><id>http://localhost:4000/english-disease</id><content type="html" xml:base="http://localhost:4000/english-disease/">&lt;p&gt;&lt;img src=&quot;https://www.spondylitis.ca/wp-content/uploads/2020/02/600x400_heart_illustration_xray-1.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;cold 感冒&lt;/p&gt;

    &lt;p&gt;a common infection, especially in the nose and throat, that often causes a cough, a slight fever, and sometimes some pain in the muscles:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;I’ve got a cold.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;She caught a cold at school.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;em&gt;（UK informal）&lt;/em&gt; Don’t come near me - I’ve got a stinking/streaming cold (= extremely bad cold).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;fever 发烧&lt;/p&gt;

    &lt;p&gt;a medical condition in which the body temperature is higher than usual and the heart beats very fast:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;He’s got a headache and a slight fever.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;flu 流感&lt;/p&gt;

    &lt;p&gt;Pan seared scallons 香煎扇贝&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;headache 头痛&lt;/p&gt;

    &lt;p&gt;Brown all sides of the steak&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;stomachache 胃痛、肚子痛&lt;/p&gt;

    &lt;p&gt;With braises, where you’re adding the least amount of liquid required to cook the meat or vegetables, stews require full submersion, and usually call for the meat or vegetables to be cut into unifiorm pieces for even cooking.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;red braised pork belly 红烧肉&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Bring the water to a boil, turn down to medium low heat, and let it simmer for 40 minutes.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Because it preserves all the nutrients in your food.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Toothache 牙痛&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Blanch the vegetables before stir frying. It&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;indigestion 消化不良&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Do you suffer from indigestion after you have eaten?&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;You’ll give yourself indigestion if you swallow your dinner so quickly.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;anaemia 贫血&lt;/p&gt;

    &lt;p&gt;a medical condition in which there are not enough red blood cells in the blood:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;The main symptoms of anaemia are tiredness and pallor.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;stroke 中风&lt;/p&gt;

    &lt;p&gt;a sudden change in the blood supply to a part of the brain, sometimes causing a loss of the ability to move particular parts of the body:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;She suffered/had a stroke that left her unable to speak.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;He’s been fairly poorly since having a stroke in January.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;He suffered a stroke in 1988 that left him unable to speak, but his mental capacity wasn’t affected.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;appendicitis 阑尾炎&lt;/p&gt;

    &lt;p&gt;an illness in which the appendix is infected and painful and usually needs to be removed in an operation：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;She had her appendix out (= medically removed) last summer.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;arthritis 关节炎&lt;/p&gt;

    &lt;p&gt;a serious condition in which a person’s joints (= the places where two bones are connected) become painful, swollen, and stiff:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;In later life she was crippled with arthritis.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;enteritis / gastroenteritis 肠炎&lt;/p&gt;

    &lt;p&gt;an illness that causes the stomach and bowels to become swollen and painful&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;fracture / break 骨折&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;She fractured her skull in the accident.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Two of her ribs fractured when she was thrown from her horse.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Your arm’s got a fracture.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Old bones break easily.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;chicken pox 水痘&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;measles 麻疹&lt;/p&gt;

    &lt;p&gt;a disease, especially of children, that causes a high temperature and small red spots that cover the whole body&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;All our children have had the measles.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;heart disease 心脏病&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;diabetes 糖尿病&lt;/p&gt;

    &lt;p&gt;a medical condition in which the body cannot produce enough insulin to control the amount of sugar in the blood&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;cancer 癌症&lt;/p&gt;

    &lt;p&gt;a serious disease in which growths of cells, also called cancers, form in the body and kill normal body cells. The disease often causes death.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;fungus 脚气&lt;/p&gt;

    &lt;p&gt;an organism (= a living thing) that is similar to a plant without leaves, flowers or green colouring, and that usually grows on plants or on decaying matter. mushrooms and mildew are both fungi.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pneumonia 肺炎 bronchia 支气管&lt;/p&gt;

    &lt;p&gt;a serious illness affecting one or both lungs that makes breathing difficult&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;She died from bronchial pneumonia.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;inflammation 炎症&lt;/p&gt;

    &lt;p&gt;​a condition in which a part of the body becomes red, painful and swollen (= larger than normal) because of infection or injury&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;The doctor’s notes recorded inflammation of the ear.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;I used a cream to reduce the inflammation.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;insomnia 失眠&lt;/p&gt;

    &lt;p&gt;the condition of being unable to sleep&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;to suffer from insomnia&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;nausea 恶心&lt;/p&gt;

    &lt;p&gt;the feeling that you have when you want to vomit, for example because you are sick or are shocked or frightened by something&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;A wave of nausea swept over her.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Nausea and vomiting are common symptoms.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;leukemia 白血病&lt;/p&gt;

    &lt;p&gt;a serious disease in which too many white blood cells are produced, causing weakness and sometimes death&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;The newspapers are full of stories of leukaemia clusters near nuclear establishments.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;more-examples&quot;&gt;More Examples:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;He is under the weather. 他生病了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He has been shut-in for a few days. 他生病在家几天了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He feels exhausted most of the time. 他经常觉得非常疲惫。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;His head is pounding. 他头痛。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He feels light-headed. 他觉得头晕。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He feels as though everything around him is spinning. 他感到天旋地转。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He has been lacking in energy for some time. 他感觉虚弱有一段时间了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He has bouts of uncontrollable coughing. 他无法控制的一阵阵咳嗽。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He has bouts of abdominal pain. 他一阵阵的肚子痛。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He has a soure throat and a stuffy nose. 他嗓子痛，而且鼻子不通气，。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is usually hard for him to fall asleep when he goes to bed at night.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;He has a feeling of tightness in the chest. 他觉得胸部闷闷的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The tooth hurts when he bites down on it. 他咬东西时，牙齿就痛。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;read-more&quot;&gt;Read More:&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;disease 表示“疾病”，通常指具体的“疾病”(可数)。如：&lt;/p&gt;

    &lt;p&gt;Most diseases could be wiped out. 多数疾病是可以消灭的。&lt;/p&gt;

    &lt;p&gt;I caught the disease from you. 这病我是从你那传染来的。&lt;/p&gt;

    &lt;p&gt;注：有时指疾病的总称(不可数)，即通称的“疾病”。如：&lt;/p&gt;

    &lt;p&gt;Rats spread disease. 老鼠传染疾病。&lt;/p&gt;

    &lt;p&gt;Cleanliness helps prevent disease. 清洁有助于预防疾病。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;illness 和 sickness 常可通用，它们主要用于表示生病的时间或因病(disease)导致的不健康状态等。如：&lt;/p&gt;

    &lt;p&gt;He can’t come because of illness. 他因病不能来。&lt;/p&gt;

    &lt;p&gt;He died after a long illness. 他死之前病了很久。&lt;/p&gt;

    &lt;p&gt;She is cheerful in spite of her illness. 她尽管有病，但还是快乐。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用于医学上表示各种病称时，通常用 disease。如：&lt;/p&gt;

    &lt;p&gt;contagious diseases 传染病&lt;/p&gt;

    &lt;p&gt;English disease 气管炎&lt;/p&gt;

    &lt;p&gt;heart disease 心脏病&lt;/p&gt;

    &lt;p&gt;lung disease 肺病&lt;/p&gt;

    &lt;p&gt;a nervous disease 神经病&lt;/p&gt;

    &lt;p&gt;a sex disease 性病&lt;/p&gt;

    &lt;p&gt;skin disease 皮肤病     等等&lt;/p&gt;

    &lt;p&gt;注：有个别搭配也用 illness。如：&lt;/p&gt;

    &lt;p&gt;mental illness / sickness 精神病&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;胃不调 upset stomach&lt;/p&gt;

&lt;p&gt;觉食物积滞胃中 feel heavy on the stomach&lt;/p&gt;

&lt;p&gt;有点恶心 have （experience） some nausea&lt;/p&gt;

&lt;p&gt;偶而恶心和呕吐 develop occasional nausea and vomiting&lt;/p&gt;</content><author><name></name></author><category term="English" /><summary type="html"></summary></entry><entry><title type="html">Linux - grep, egrep, fgrep</title><link href="http://localhost:4000/linux-grep-egrep-fgrep/" rel="alternate" type="text/html" title="Linux - grep, egrep, fgrep" /><published>2020-02-23T00:00:00-08:00</published><updated>2020-02-23T00:00:00-08:00</updated><id>http://localhost:4000/linux-grep-egrep-fgrep</id><content type="html" xml:base="http://localhost:4000/linux-grep-egrep-fgrep/">&lt;p&gt;&lt;img src=&quot;http://qpeng.org/computer/grep.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Linux中的ps命令是Process Status的缩写。ps命令用来列出系统中当前运行的那些进程。ps命令列出的是当前那些进程的快照，就是执行ps命令的那个时刻的那些进程，如果想要动态的显示进程信息，就可以使用top命令。&lt;/p&gt;

&lt;p&gt;要对进程进行监测和控制，首先必须要了解当前进程的情况，也就是需要查看当前进程，而 ps 命令就是最基本同时也是非常强大的进程查看命令。使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等。总之大部分信息都是可以通过执行该命令得到的。&lt;/p&gt;

&lt;p&gt;ps 为我们提供了进程的一次性的查看，它所提供的查看结果并不动态连续的；如果想对进程时间监控，应该用 top 工具。&lt;/p&gt;

&lt;p&gt;kill 命令用于杀死进程。&lt;/p&gt;

&lt;p&gt;linux上进程有5种状态:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;运行(正在运行或在运行队列中等待)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;停止(进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ps工具标识进程的5种状态码:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;D&lt;/strong&gt; 不可中断 uninterruptible sleep (usually IO)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; 运行 runnable (on run queue)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;S&lt;/strong&gt; 中断 sleeping&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;T&lt;/strong&gt; 停止 traced or stopped&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Z&lt;/strong&gt; 僵死 a defunct (”zombie”) process&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;命令格式&quot;&gt;命令格式：&lt;/h2&gt;

&lt;p&gt;ps[参数]&lt;/p&gt;

&lt;h2 id=&quot;命令功能&quot;&gt;命令功能：&lt;/h2&gt;

&lt;p&gt;用来显示当前进程的状态&lt;/p&gt;

&lt;h2 id=&quot;命令参数&quot;&gt;命令参数：&lt;/h2&gt;

&lt;p&gt;a  显示所有进程&lt;/p&gt;

&lt;p&gt;-a 显示同一终端下的所有程序&lt;/p&gt;

&lt;p&gt;-A 显示所有进程&lt;/p&gt;

&lt;p&gt;c  显示进程的真实名称&lt;/p&gt;

&lt;p&gt;-N 反向选择&lt;/p&gt;

&lt;p&gt;-e 等于“-A”&lt;/p&gt;

&lt;p&gt;e  显示环境变量&lt;/p&gt;

&lt;p&gt;f  显示程序间的关系&lt;/p&gt;

&lt;p&gt;-H 显示树状结构&lt;/p&gt;

&lt;p&gt;r  显示当前终端的进程&lt;/p&gt;

&lt;p&gt;T  显示当前终端的所有程序&lt;/p&gt;

&lt;p&gt;u  指定用户的所有进程&lt;/p&gt;

&lt;p&gt;-au 显示较详细的资讯&lt;/p&gt;

&lt;p&gt;-aux 显示所有包含其他使用者的行程&lt;/p&gt;

&lt;p&gt;-C&lt;命令&gt; 列出指定命令的状况&lt;/命令&gt;&lt;/p&gt;

&lt;p&gt;–lines&lt;行数&gt; 每页显示的行数&lt;/行数&gt;&lt;/p&gt;

&lt;p&gt;–width&lt;字符数&gt; 每页显示的字符数&lt;/字符数&gt;&lt;/p&gt;

&lt;p&gt;–help 显示帮助信息&lt;/p&gt;

&lt;p&gt;–version 显示版本显示&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;使用实例&quot;&gt;使用实例：&lt;/h2&gt;

&lt;p&gt;实例1：显示所有进程信息&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;  ps -A
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;输出：&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;  [root@localhost test6]#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
    PID TTY          TIME CMD

      1 ?        00:00:00 init

      2 ?        00:00:01 migration/0

      3 ?        00:00:00 ksoftirqd/0

      4 ?        00:00:01 migration/1

      5 ?        00:00:00 ksoftirqd/1

      6 ?        00:29:57 events/0

      7 ?        00:00:00 events/1

      8 ?        00:00:00 khelper

    49 ?        00:00:00 kthread

    54 ?        00:00:00 kblockd/0

    55 ?        00:00:00 kblockd/1

    56 ?        00:00:00 kacpid

    217 ?        00:00:00 cqueue/0

    ……省略部分结果
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;实例2：显示指定用户信息&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;p&gt;ps -u root&lt;/p&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;p&gt;[root@localhost test6]# ps -u root&lt;/p&gt;

&lt;p&gt;PID TTY          TIME CMD&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 ?        00:00:00 init

2 ?        00:00:01 migration/0

3 ?        00:00:00 ksoftirqd/0

4 ?        00:00:01 migration/1

5 ?        00:00:00 ksoftirqd/1

6 ?        00:29:57 events/0

7 ?        00:00:00 events/1

8 ?        00:00:00 khelper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;49 ?        00:00:00 kthread&lt;/p&gt;

&lt;p&gt;54 ?        00:00:00 kblockd/0&lt;/p&gt;

&lt;p&gt;55 ?        00:00:00 kblockd/1&lt;/p&gt;

&lt;p&gt;56 ?        00:00:00 kacpid&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;……省略部分结果 ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实例3：显示所有进程信息，连同命令行&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;p&gt;ps -ef&lt;/p&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;p&gt;[root@localhost test6]# ps -ef&lt;/p&gt;

&lt;p&gt;UID        PID  PPID  C STIME TTY          TIME CMD&lt;/p&gt;

&lt;p&gt;root         1     0  0 Nov02 ?        00:00:00 init [3]&lt;/p&gt;

&lt;p&gt;root         2     1  0 Nov02 ?        00:00:01 [migration/0]&lt;/p&gt;

&lt;p&gt;root         3     1  0 Nov02 ?        00:00:00 [ksoftirqd/0]&lt;/p&gt;

&lt;p&gt;root         4     1  0 Nov02 ?        00:00:01 [migration/1]&lt;/p&gt;

&lt;p&gt;root         5     1  0 Nov02 ?        00:00:00 [ksoftirqd/1]&lt;/p&gt;

&lt;p&gt;root         6     1  0 Nov02 ?        00:29:57 [events/0]&lt;/p&gt;

&lt;p&gt;root         7     1  0 Nov02 ?        00:00:00 [events/1]&lt;/p&gt;

&lt;p&gt;root         8     1  0 Nov02 ?        00:00:00 [khelper]&lt;/p&gt;

&lt;p&gt;root        49     1  0 Nov02 ?        00:00:00 [kthread]&lt;/p&gt;

&lt;p&gt;root        54    49  0 Nov02 ?        00:00:00 [kblockd/0]&lt;/p&gt;

&lt;p&gt;root        55    49  0 Nov02 ?        00:00:00 [kblockd/1]&lt;/p&gt;

&lt;p&gt;root        56    49  0 Nov02 ?        00:00:00 [kacpid]&lt;/p&gt;

&lt;p&gt;……省略部分结果&lt;/p&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;实例4： ps 与grep 常用组合用法，查找特定进程&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ps -ef&lt;/td&gt;
      &lt;td&gt;grep ssh&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[root@localhost test6]# ps -ef&lt;/td&gt;
      &lt;td&gt;grep ssh&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;root      2720     1  0 Nov02 ?        00:00:00 /usr/sbin/sshd&lt;/p&gt;

&lt;p&gt;root     17394  2720  0 14:58 ?        00:00:00 sshd: root@pts/0&lt;/p&gt;

&lt;p&gt;root     17465 17398  0 15:57 pts/0    00:00:00 grep ssh&lt;/p&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;实例5：将目前属于您自己这次登入的 PID 与相关信息列示出来&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;p&gt;ps -l&lt;/p&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;p&gt;[root@localhost test6]# ps -l&lt;/p&gt;

&lt;p&gt;F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD&lt;/p&gt;

&lt;p&gt;4 S     0 17398 17394  0  75   0 - 16543 wait   pts/0    00:00:00 bash&lt;/p&gt;

&lt;p&gt;4 R     0 17469 17398  0  77   0 - 15877 -      pts/0    00:00:00 ps&lt;/p&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;各相关信息的意义：&lt;/p&gt;

&lt;p&gt;F 代表这个程序的旗标 (flag)， 4 代表使用者为 super user&lt;/p&gt;

&lt;p&gt;S 代表这个程序的状态 (STAT)，关于各 STAT 的意义将在内文介绍&lt;/p&gt;

&lt;p&gt;UID 程序被该 UID 所拥有&lt;/p&gt;

&lt;p&gt;PID 就是这个程序的 ID ！&lt;/p&gt;

&lt;p&gt;PPID 则是其上级父程序的ID&lt;/p&gt;

&lt;p&gt;C CPU 使用的资源百分比&lt;/p&gt;

&lt;p&gt;PRI 这个是 Priority (优先执行序) 的缩写，详细后面介绍&lt;/p&gt;

&lt;p&gt;NI 这个是 Nice 值，在下一小节我们会持续介绍&lt;/p&gt;

&lt;p&gt;ADDR 这个是 kernel function，指出该程序在内存的那个部分。如果是个 running的程序，一般就是 “-“&lt;/p&gt;

&lt;p&gt;SZ 使用掉的内存大小&lt;/p&gt;

&lt;p&gt;WCHAN 目前这个程序是否正在运作当中，若为 - 表示正在运作&lt;/p&gt;

&lt;p&gt;TTY 登入者的终端机位置&lt;/p&gt;

&lt;p&gt;TIME 使用掉的 CPU 时间。&lt;/p&gt;

&lt;p&gt;CMD 所下达的指令为何&lt;/p&gt;

&lt;p&gt;在预设的情况下， ps 仅会列出与目前所在的 bash shell 有关的 PID 而已，所以， 当我使用 ps -l 的时候，只有三个 PID。&lt;/p&gt;

&lt;p&gt;实例6：列出目前所有的正在内存当中的程序&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```console
ps aux
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;p&gt;[root@localhost test6]# ps aux&lt;/p&gt;

&lt;p&gt;USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND&lt;/p&gt;

&lt;p&gt;root         1  0.0  0.0  10368   676 ?        Ss   Nov02   0:00 init [3]&lt;/p&gt;

&lt;p&gt;root         2  0.0  0.0      0     0 ?        S&amp;lt;   Nov02   0:01 [migration/0]&lt;/p&gt;

&lt;p&gt;root         3  0.0  0.0      0     0 ?        SN   Nov02   0:00 [ksoftirqd/0]&lt;/p&gt;

&lt;p&gt;root         4  0.0  0.0      0     0 ?        S&amp;lt;   Nov02   0:01 [migration/1]&lt;/p&gt;

&lt;p&gt;root         5  0.0  0.0      0     0 ?        SN   Nov02   0:00 [ksoftirqd/1]&lt;/p&gt;

&lt;p&gt;root         6  0.0  0.0      0     0 ?        S&amp;lt;   Nov02  29:57 [events/0]&lt;/p&gt;

&lt;p&gt;root         7  0.0  0.0      0     0 ?        S&amp;lt;   Nov02   0:00 [events/1]&lt;/p&gt;

&lt;p&gt;root         8  0.0  0.0      0     0 ?        S&amp;lt;   Nov02   0:00 [khelper]&lt;/p&gt;

&lt;p&gt;root        49  0.0  0.0      0     0 ?        S&amp;lt;   Nov02   0:00 [kthread]&lt;/p&gt;

&lt;p&gt;root        54  0.0  0.0      0     0 ?        S&amp;lt;   Nov02   0:00 [kblockd/0]&lt;/p&gt;

&lt;p&gt;root        55  0.0  0.0      0     0 ?        S&amp;lt;   Nov02   0:00 [kblockd/1]&lt;/p&gt;

&lt;p&gt;root        56  0.0  0.0      0     0 ?        S&amp;lt;   Nov02   0:00 [kacpid]&lt;/p&gt;

&lt;p&gt;……省略部分结果&lt;/p&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;USER：该 process 属于那个使用者账号的&lt;/p&gt;

&lt;p&gt;PID ：该 process 的号码&lt;/p&gt;

&lt;p&gt;%CPU：该 process 使用掉的 CPU 资源百分比&lt;/p&gt;

&lt;p&gt;%MEM：该 process 所占用的物理内存百分比&lt;/p&gt;

&lt;p&gt;VSZ ：该 process 使用掉的虚拟内存量 (Kbytes)&lt;/p&gt;

&lt;p&gt;RSS ：该 process 占用的固定的内存量 (Kbytes)&lt;/p&gt;

&lt;p&gt;TTY ：该 process 是在那个终端机上面运作，若与终端机无关，则显示 ?，另外， tty1-tty6 是本机上面的登入者程序，若为 pts/0 等等的，则表示为由网络连接进主机的程序。&lt;/p&gt;

&lt;p&gt;STAT：该程序目前的状态，主要的状态有&lt;/p&gt;

&lt;p&gt;R ：该程序目前正在运作，或者是可被运作&lt;/p&gt;

&lt;p&gt;S ：该程序目前正在睡眠当中 (可说是 idle 状态)，但可被某些讯号 (signal) 唤醒。&lt;/p&gt;

&lt;p&gt;T ：该程序目前正在侦测或者是停止了&lt;/p&gt;

&lt;p&gt;Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态&lt;/p&gt;

&lt;p&gt;START：该 process 被触发启动的时间&lt;/p&gt;

&lt;p&gt;TIME ：该 process 实际使用 CPU 运作的时间&lt;/p&gt;

&lt;p&gt;COMMAND：该程序的实际指令&lt;/p&gt;

&lt;p&gt;实例7：列出类似程序树的程序显示&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;p&gt;ps -axjf&lt;/p&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;p&gt;[root@localhost test6]# ps -axjf&lt;/p&gt;

&lt;p&gt;Warning: bad syntax, perhaps a bogus ‘-‘? See /usr/share/doc/procps-3.2.7/FAQ&lt;/p&gt;

&lt;p&gt;PPID   PID  PGID   SID TTY      TPGID STAT   UID   TIME COMMAND&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0     1     1     1 ?           -1 Ss       0   0:00 init [3]                  

1     2     1     1 ?           -1 S&amp;lt;       0   0:01 [migration/0]

1     3     1     1 ?           -1 SN       0   0:00 [ksoftirqd/0]

1     4     1     1 ?           -1 S&amp;lt;       0   0:01 [migration/1]

1     5     1     1 ?           -1 SN       0   0:00 [ksoftirqd/1]

1     6     1     1 ?           -1 S&amp;lt;       0  29:58 [events/0]

1     7     1     1 ?           -1 S&amp;lt;       0   0:00 [events/1]

1     8     1     1 ?           -1 S&amp;lt;       0   0:00 [khelper]

1    49     1     1 ?           -1 S&amp;lt;       0   0:00 [kthread]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;49    54     1     1 ?           -1 S&amp;lt;       0   0:00  _ [kblockd/0]&lt;/p&gt;

&lt;p&gt;49    55     1     1 ?           -1 S&amp;lt;       0   0:00  _ [kblockd/1]&lt;/p&gt;

&lt;p&gt;49    56     1     1 ?           -1 S&amp;lt;       0   0:00  _ [kacpid]&lt;/p&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;实例8：找出与 cron 与 syslog 这两个服务有关的 PID 号码&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;  ps aux | grep
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;输出：&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[root@localhost test6]#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ps aux | egrep &lt;span class=&quot;s1&quot;&gt;'(cron|syslog)'&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
root      2682  0.0  0.0  83384  2000 ?        Sl   Nov02   0:00 /sbin/rsyslogd -i /var/run/syslogd.pid -c 5

root      2735  0.0  0.0  74812  1140 ?        Ss   Nov02   0:00 crond

root     17475  0.0  0.0  61180   832 pts/0    S+   16:27   0:00 egrep (cron|syslog)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;其他实例：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;可以用&lt;/td&gt;
          &lt;td&gt;管道和 more 连接起来分页查看&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;  ps -aux |more
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;把所有进程显示出来，并输出到ps001.txt文件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;  ps -aux &amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ps001.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;输出指定的字段&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;  ps -o pid,ppid,pgrp,session,tpgid,comm
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出：&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;  [root@localhost test6]#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; pid,ppid,pgrp,session,tpgid,comm
&lt;span class=&quot;go&quot;&gt;
    PID  PPID  PGRP  SESS TPGID COMMAND

  17398 17394 17398 17398 17478 bash

  17478 17398 17478 17398 17478 ps
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/peida/archive/2012/12/19/2824418.html&quot; title=&quot;每天一个linux命令（41）：ps命令&quot;&gt;原文&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Linux" /><summary type="html"></summary></entry></feed>