<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-02-20T14:35:53-08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">山猪</title><subtitle>方寸之间 点滴墨彩</subtitle><entry><title type="html">curl 的用法指南</title><link href="http://localhost:4000/linux-curl/" rel="alternate" type="text/html" title="curl 的用法指南" /><published>2020-02-20T00:00:00-08:00</published><updated>2020-02-20T00:00:00-08:00</updated><id>http://localhost:4000/linux-curl</id><content type="html" xml:base="http://localhost:4000/linux-curl/">&lt;p&gt;&lt;img src=&quot;https://www.maketecheasier.com/assets/uploads/2019/03/how-to-use-curl-commands-featured-800x400.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;curl 是常用的命令行工具，用来请求 Web 服务器。它的名字就是客户端（client）的 URL 工具的意思。&lt;/p&gt;

&lt;p&gt;它的功能非常强大，命令行参数多达几十种。如果熟练的话，完全可以取代 Postman 这一类的图形界面工具。&lt;/p&gt;

&lt;p&gt;不带有任何参数时，curl 就是发出 GET 请求。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令向&lt;strong&gt;www.example.com&lt;/strong&gt;发出 GET 请求，服务器返回的内容会在命令行输出。&lt;/p&gt;

&lt;h1 id=&quot;-a&quot;&gt;-A&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-A&lt;/strong&gt;参数指定客户端的用户代理标头，即&lt;strong&gt;User-Agent&lt;/strong&gt;。curl 的默认用户代理字符串是&lt;strong&gt;curl/[version]&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将&lt;strong&gt;User-Agent&lt;/strong&gt;改成 Chrome 浏览器。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令会移除&lt;strong&gt;User-Agent&lt;/strong&gt;标头。&lt;/p&gt;

&lt;p&gt;也可以通过 &lt;strong&gt;-H&lt;/strong&gt; 参数直接指定标头，更改&lt;strong&gt;User-Agent&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'User-Agent: php/1.0'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-b&quot;&gt;-b&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-b&lt;/strong&gt;参数用来向服务器发送 Cookie。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo=bar'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令会生成一个标头&lt;strong&gt;Cookie: foo=bar&lt;/strong&gt;，向服务器发送一个名为&lt;strong&gt;foo&lt;/strong&gt;、值为&lt;strong&gt;bar&lt;/strong&gt;的 Cookie。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo1=bar;foo2=bar2'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令发送两个 Cookie。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; cookies.txt https://www.google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令读取本地文件&lt;strong&gt;cookies.txt&lt;/strong&gt;，里面是服务器设置的 Cookie（参见 &lt;strong&gt;-c&lt;/strong&gt; 参数），将其发送到服务器。&lt;/p&gt;

&lt;h1 id=&quot;-c&quot;&gt;-c&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-c&lt;/strong&gt;参数将服务器设置的 Cookie 写入一个文件。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; cookies.txt https://www.google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将服务器的 HTTP 回应所设置 Cookie 写入文本文件&lt;strong&gt;cookies.txt&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&quot;-d&quot;&gt;-d&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-d&lt;/strong&gt;参数用于发送 POST 请求的数据体。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'login=emma＆password=123'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'login=emma'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'password=123'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST  https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用 &lt;strong&gt;-d&lt;/strong&gt; 参数以后，HTTP 请求会自动加上标头&lt;strong&gt;Content-Type : application/x-www-form-urlencoded&lt;/strong&gt;。并且会自动将请求转为 POST 方法，因此可以省略 &lt;strong&gt;-X POST&lt;/strong&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-d&lt;/strong&gt;参数可以读取本地文本文件的数据，向服务器发送。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@data.txt'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令读取&lt;strong&gt;data.txt&lt;/strong&gt;文件的内容，作为数据体向服务器发送。&lt;/p&gt;

&lt;h1 id=&quot;data-urlencode&quot;&gt;–data-urlencode&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;–data-urlencode&lt;/strong&gt;参数等同于 &lt;strong&gt;-d&lt;/strong&gt;，发送 POST 请求的数据体，区别在于会自动将发送的数据进行 URL 编码。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--data-urlencode&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'comment=hello world'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面代码中，发送的数据&lt;strong&gt;hello world&lt;/strong&gt;之间有一个空格，需要进行 URL 编码。&lt;/p&gt;

&lt;h1 id=&quot;-e&quot;&gt;-e&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-e&lt;/strong&gt;参数用来设置 HTTP 的标头&lt;strong&gt;Referer&lt;/strong&gt;，表示请求的来源。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;curl -e 'https://google.com?q=example' https://www.example.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将&lt;strong&gt;Referer&lt;/strong&gt;标头设为&lt;strong&gt;https://google.com?q=example&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-H&lt;/strong&gt;参数可以通过直接添加标头&lt;strong&gt;Referer&lt;/strong&gt;，达到同样效果。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;curl -H 'Referer: https://google.com?q=example' https://www.example.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-f&quot;&gt;-F&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-F&lt;/strong&gt;参数用来向服务器上传二进制文件。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file=@photo.png'&lt;/span&gt; https://google.com/profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令会给 HTTP 请求加上标头&lt;strong&gt;Content-Type: multipart/form-data&lt;/strong&gt;，然后将文件&lt;strong&gt;photo.png&lt;/strong&gt;作为&lt;strong&gt;file&lt;/strong&gt;字段上传。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-F&lt;/strong&gt;参数可以指定 MIME 类型。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file=@photo.png;type=image/png'&lt;/span&gt; https://google.com/profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令指定 MIME 类型为&lt;strong&gt;image/png&lt;/strong&gt;，否则 curl 会把 MIME 类型设为&lt;strong&gt;application/octet-stream&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-F&lt;/strong&gt;参数也可以指定文件名。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file=@photo.png;filename=me.png'&lt;/span&gt; https://google.com/profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令中，原始文件名为&lt;strong&gt;photo.png&lt;/strong&gt;，但是服务器接收到的文件名为&lt;strong&gt;me.png&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&quot;-g&quot;&gt;-G&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-G&lt;/strong&gt;参数用来构造 URL 的查询字符串。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'q=kitties'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'count=20'&lt;/span&gt; https://google.com/search
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令会发出一个 GET 请求，实际请求的 URL 为&lt;strong&gt;https://google.com/search?q=kitties&amp;amp;count=20&lt;/strong&gt;。如果省略 &lt;strong&gt;–G&lt;/strong&gt;，会发出一个 POST 请求。&lt;/p&gt;

&lt;p&gt;如果数据需要 URL 编码，可以结合 &lt;strong&gt;–data–urlencode&lt;/strong&gt;参数。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--data-urlencode&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'comment=hello world'&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-h&quot;&gt;-H&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-H&lt;/strong&gt;参数添加 HTTP 请求的标头。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Accept-Language: en-US'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令添加 HTTP 标头&lt;strong&gt;Accept-Language: en-US&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Accept-Language: en-US'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Secret-Message: xyzzy'&lt;/span&gt; https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令添加两个 HTTP 标头。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;login&quot;: &quot;emma&quot;, &quot;pass&quot;: &quot;123&quot;}'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令添加 HTTP 请求的标头是&lt;strong&gt;Content-Type: application/json&lt;/strong&gt;，然后用 &lt;strong&gt;-d&lt;/strong&gt;参数发送 JSON 数据。&lt;/p&gt;

&lt;h1 id=&quot;-i&quot;&gt;-i&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-i&lt;/strong&gt;参数打印出服务器回应的 HTTP 标头。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令收到服务器回应后，先输出服务器回应的标头，然后空一行，再输出网页的源码。&lt;/p&gt;

&lt;h1 id=&quot;-i-1&quot;&gt;-I&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-I&lt;/strong&gt;参数向服务器发出 HEAD 请求，然会将服务器返回的 HTTP 标头打印出来。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令输出服务器对 HEAD 请求的回应。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;–head&lt;/strong&gt;参数等同于 &lt;strong&gt;-I&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--head&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-k&quot;&gt;-k&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-k&lt;/strong&gt;参数指定跳过 SSL 检测。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令不会检查服务器的 SSL 证书是否正确。&lt;/p&gt;

&lt;h1 id=&quot;-l&quot;&gt;-L&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-L&lt;/strong&gt;参数会让 HTTP 请求跟随服务器的重定向。curl 默认不跟随重定向。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tweet=hi'&lt;/span&gt; https://api.twitter.com/tweet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;limit-rate&quot;&gt;–limit-rate&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;–limit-rate&lt;/strong&gt;用来限制 HTTP 请求和回应的带宽，模拟慢网速的环境。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--limit-rate&lt;/span&gt; 200k https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将带宽限制在每秒 200K 字节。&lt;/p&gt;

&lt;h1 id=&quot;-o&quot;&gt;-o&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-o&lt;/strong&gt;参数将服务器的回应保存成文件，等同于wget命令。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; example.html https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将&lt;strong&gt;www.example.com&lt;/strong&gt;保存成&lt;strong&gt;example.html&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&quot;-o-1&quot;&gt;-O&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-O&lt;/strong&gt;参数将服务器回应保存成文件，并将 URL 的最后部分当作文件名。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; https://www.example.com/foo/bar.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令将服务器回应保存成文件，文件名为&lt;strong&gt;bar.html&lt;/strong&gt;。&lt;/p&gt;

&lt;h1 id=&quot;-s&quot;&gt;-s&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-s&lt;/strong&gt;参数将不输出错误和进度信息。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令一旦发生错误，不会显示错误信息。不发生错误的话，会正常显示运行结果。&lt;/p&gt;

&lt;p&gt;如果想让 curl 不产生任何输出，可以使用下面的命令。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /dev/null https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-s-1&quot;&gt;-S&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-S&lt;/strong&gt;参数指定只输出错误信息，通常与 &lt;strong&gt;-s&lt;/strong&gt;一起使用。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /dev/null https://google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令没有任何输出，除非发生错误。&lt;/p&gt;

&lt;h1 id=&quot;-u&quot;&gt;-u&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-u&lt;/strong&gt;参数用来设置服务器认证的用户名和密码。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bob:12345'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令设置用户名为&lt;strong&gt;bob&lt;/strong&gt;，密码为&lt;strong&gt;12345&lt;/strong&gt;，然后将其转为 HTTP 标头&lt;strong&gt;Authorization: Basic Ym9iOjEyMzQ1&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;curl 能够识别 URL 里面的用户名和密码。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl https://bob:12345@google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令能够识别 URL 里面的用户名和密码，将其转为上个例子里面的 HTTP 标头。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bob'&lt;/span&gt; https://google.com/login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令只设置了用户名，执行后，curl 会提示用户输入密码。&lt;/p&gt;

&lt;h1 id=&quot;-v&quot;&gt;-v&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-v&lt;/strong&gt;参数输出通信的整个过程，用于调试。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;–trace&lt;/strong&gt;参数也可以用于调试，还会输出原始的二进制数据。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--trace&lt;/span&gt; - https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;-x&quot;&gt;-x&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-x&lt;/strong&gt;参数指定 HTTP 请求的代理。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; socks5://james:cats@myproxy.com:8080 https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令指定 HTTP 请求通过&lt;strong&gt;myproxy.com:8080&lt;/strong&gt;的 socks5 代理发出。&lt;/p&gt;

&lt;p&gt;如果没有指定代理协议，默认为 HTTP。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; james:cats@myproxy.com:8080 https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令中，请求的代理使用 HTTP 协议。&lt;/p&gt;

&lt;h1 id=&quot;-x-1&quot;&gt;-X&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;-X&lt;/strong&gt;参数指定 HTTP 请求的方法。&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST https://www.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面命令对&lt;strong&gt;https://www.example.com&lt;/strong&gt;发出 POST 请求。&lt;/p&gt;

&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://catonmat.net/cookbooks/curl&quot; title=&quot;curl cookbook&quot;&gt;curl cookbook&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/09/curl.html&quot; title=&quot;curl 初学者教程&quot;&gt;curl 初学者教程&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Linux" /><summary type="html"></summary></entry><entry><title type="html">English Vocabulary - Vegetable</title><link href="http://localhost:4000/english-vocabulary-vegetable/" rel="alternate" type="text/html" title="English Vocabulary - Vegetable" /><published>2020-02-19T00:00:00-08:00</published><updated>2020-02-19T00:00:00-08:00</updated><id>http://localhost:4000/english-vocabulary-vegetable</id><content type="html" xml:base="http://localhost:4000/english-vocabulary-vegetable/">&lt;p&gt;&lt;img src=&quot;https://cdn.britannica.com/17/196817-050-6A15DAC3/vegetables.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;vegetable&quot;&gt;Vegetable&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Adzuki[ə‘ʒuki] bean 红豆&lt;/p&gt;

&lt;p&gt;Aloe[‘ælo] 芦荟&lt;/p&gt;

&lt;p&gt;Aniseed[‘ænəsid]八角&lt;/p&gt;

&lt;p&gt;Aubergine[‘obɚʒin] 茄子（英国）&lt;/p&gt;

&lt;p&gt;Asparagus[ə‘spærəgəs] 芦笋&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bamboo[，bæm‘bu] Shoot笋&lt;/p&gt;

&lt;p&gt;Broccoli[‘brɔkəli]西兰花&lt;/p&gt;

&lt;p&gt;Bean Sprout[spraʊt] 绿豆芽&lt;/p&gt;

&lt;p&gt;Beetroot [‘bitrut] 甜菜&lt;/p&gt;

&lt;p&gt;Brussels sprout球芽甘蓝&lt;/p&gt;

&lt;p&gt;Bitter gourd[ɡʊrd] 苦瓜&lt;/p&gt;

&lt;p&gt;Bok-choy[‘bɔk’tʃɔɪ]小白菜&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Carrot [‘kærət] 胡萝卜&lt;/p&gt;

&lt;p&gt;Cabbage [ˈkæbɪdʒ]卷心菜&lt;/p&gt;

&lt;p&gt;Celery[‘sɛləri]芹菜&lt;/p&gt;

&lt;p&gt;Cucumber[‘kjʊ，kʌmbɚ]黄瓜&lt;/p&gt;

&lt;p&gt;Cauliflower[‘kɔlɪ’flaʊɚ]花菜&lt;/p&gt;

&lt;p&gt;Cloud ear/wood ear木耳&lt;/p&gt;

&lt;p&gt;Chive [tʃaɪv] 细香葱&lt;/p&gt;

&lt;p&gt;Corn[kɔrn] 玉米&lt;/p&gt;

&lt;p&gt;Chili [‘tʃɪli]辣椒&lt;/p&gt;

&lt;p&gt;Coriander[，kɔrɪ‘ændɚ]香菜&lt;/p&gt;

&lt;p&gt;Cinnamon[‘sɪnəmən]肉桂&lt;/p&gt;

&lt;p&gt;Chinese Kale[kel]芥蓝&lt;/p&gt;

&lt;p&gt;Chinese Radish/Daikon白萝卜&lt;/p&gt;

&lt;p&gt;Chinese Yam[jæm] 山药&lt;/p&gt;

&lt;p&gt;Chrysanthemum[krɪ‘sænθəməm] greens茼蒿&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;E&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Eggplant[‘ɛɡplænt]茄子&lt;/p&gt;

&lt;p&gt;Eddoes [‘edəʊ]小芋头&lt;/p&gt;

&lt;p&gt;Enoki[e‘nɔki：] mushroom 金针菇&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;F&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;French Bean四季豆/刀豆&lt;/p&gt;

&lt;p&gt;Fennel [‘fɛnl]茴香&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ginger[‘dʒɪndʒɚ] 姜&lt;/p&gt;

&lt;p&gt;Garlic[‘ɡɑrlɪk]大蒜&lt;/p&gt;

&lt;p&gt;Garlic sprout 蒜苗/苔&lt;/p&gt;

&lt;p&gt;Green Pepper 青椒&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;K&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kohlrabi [‘kol’rɑbi]  甘蓝&lt;/p&gt;

&lt;p&gt;Kelp[kɛlp] 海带&lt;/p&gt;

&lt;p&gt;King oyster mushroom 杏鲍菇&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;L&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lettuce[‘lɛtɪs] 莴苣/生菜&lt;/p&gt;

&lt;p&gt;Lotus seed 莲子&lt;/p&gt;

&lt;p&gt;Loofah [‘lufə] 丝瓜&lt;/p&gt;

&lt;p&gt;Laurel[‘lɔrəl] 月桂&lt;/p&gt;

&lt;p&gt;Leek [lik]韭葱&lt;/p&gt;

&lt;p&gt;Laver[‘levɚ]紫菜&lt;/p&gt;

&lt;p&gt;Licorice[‘lɪkərɪs； ’lɪkərɪʃ] 甘草&lt;/p&gt;

&lt;p&gt;Lotus root 莲藕&lt;/p&gt;

&lt;p&gt;想学习更多英语知识，请关注口袋英语aikoudaiyy&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;M&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mushroom[‘mʌʃrʊm]蘑菇&lt;/p&gt;

&lt;p&gt;Mung bean 绿豆&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;O&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Onion [‘ʌnjən]洋葱&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;P&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pumpkin [‘pʌmpkɪn] 南瓜&lt;/p&gt;

&lt;p&gt;Pepper [‘pɛpɚ]胡椒&lt;/p&gt;

&lt;p&gt;Pickled cucumber酸黄瓜&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Radish [‘rædɪʃ] 萝卜&lt;/p&gt;

&lt;p&gt;Romaine [rə（ʊ）‘meɪn]生菜&lt;/p&gt;

&lt;p&gt;Red pepper 红椒&lt;/p&gt;

&lt;p&gt;Red bean泛指红色的豆&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Scallion[‘skælɪən]/Spring onion 青葱&lt;/p&gt;

&lt;p&gt;Silver ear fungus 白木耳&lt;/p&gt;

&lt;p&gt;Soybean [‘sɔɪ，bin]大豆&lt;/p&gt;

&lt;p&gt;Soybean sprout 黄豆芽&lt;/p&gt;

&lt;p&gt;Spinach[‘spɪnɪtʃ]菠菜&lt;/p&gt;

&lt;p&gt;Straw mushroom草菇&lt;/p&gt;

&lt;p&gt;Green bean刀豆&lt;/p&gt;

&lt;p&gt;Sweet Potato红薯&lt;/p&gt;

&lt;p&gt;Seaweed[‘si’wid]海藻&lt;/p&gt;

&lt;p&gt;Snow Pea荷兰豆&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;T&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Taro [‘tærəʊ] 大芋头&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;W&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Watercress[‘wɔtɚ’krɛs] 豆瓣菜&lt;/p&gt;

&lt;p&gt;Water spinach空心菜&lt;/p&gt;

&lt;p&gt;Water caltrop‘kæltrəp] 菱角&lt;/p&gt;

&lt;p&gt;White gourd [ɡʊrd]冬瓜&lt;/p&gt;

&lt;p&gt;Water chestnut荸荠&lt;/p&gt;

&lt;p&gt;Wakame/sea mustard裙带藻（味增汤海带）&lt;/p&gt;

&lt;p&gt;Wild rice stem茭白&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Y&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yellow pepper 黄椒&lt;/p&gt;</content><author><name></name></author><category term="English" /><summary type="html"></summary></entry><entry><title type="html">English Vocabulary - Cook</title><link href="http://localhost:4000/english-cook/" rel="alternate" type="text/html" title="English Vocabulary - Cook" /><published>2020-02-19T00:00:00-08:00</published><updated>2020-02-19T00:00:00-08:00</updated><id>http://localhost:4000/english-cook</id><content type="html" xml:base="http://localhost:4000/english-cook/">&lt;p&gt;&lt;img src=&quot;https://gourmandelle.com/wp-content/uploads/2013/03/Cooking-Methods-from-a-Yin-Yang-Perspective-Gourmandelle.com_.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;stir-fry 炒&lt;/p&gt;

    &lt;p&gt;saute / sautee&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Today, I don’t know what to cook. I’m just going to stir fry some veggies and meat, Whatever I have on hand. Therefore&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;I’m just going to make some veggie stir-fry.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pan fry 煎&lt;/p&gt;

    &lt;p&gt;Gyoza 日式煎饺&lt;/p&gt;

    &lt;p&gt;Pan fried dumplings 煎饺&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sear 煎（焦）&lt;/p&gt;

    &lt;p&gt;Pan seared scallons 香煎扇贝&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;brown 煎（焦）&lt;/p&gt;

    &lt;p&gt;Brown all sides of the steak&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;braise 炖（红烧） VS. stew 炖 VS. gradual simmering（小火炖）&lt;/p&gt;

    &lt;p&gt;With braises, where you’re adding the least amount of liquid required to cook the meat or vegetables, stews require full submersion, and usually call for the meat or vegetables to be cut into unifiorm pieces for even cooking.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;red braised pork belly 红烧肉&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Bring the water to a boil, turn down to medium low heat, and let it simmer for 40 minutes.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Because it preserves all the nutrients in your food.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;blanch 焯水&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Blanch the vegetables before stir frying. It&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;marinate 腌 VS. pickle 卤制&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Marinate the chicken in the fridge overnight, and then cook it next day.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;pickled beef&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;smoke 熏&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;smoked duck&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;roast 烤（烤箱） VS. grill 烤（置于火上） VS. broil （炙烤，高温）&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;roasted chicken 烤鸭&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;grilled chicken 烤鸡&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="English" /><summary type="html"></summary></entry><entry><title type="html">SSH原理与运用</title><link href="http://localhost:4000/linux-ssh/" rel="alternate" type="text/html" title="SSH原理与运用" /><published>2020-02-19T00:00:00-08:00</published><updated>2020-02-19T00:00:00-08:00</updated><id>http://localhost:4000/linux-ssh</id><content type="html" xml:base="http://localhost:4000/linux-ssh/">&lt;p&gt;&lt;img src=&quot;https://www.howtogeek.com/wp-content/uploads/2019/07/ximg_5d28e05a4901f.png.pagespeed.gp+jp+jw+pj+ws+js+rj+rp+rw+ri+cp+md.ic.IPkGuFKMja.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;什么是SSH？&lt;/p&gt;

    &lt;p&gt;简单说，SSH是一种网络协议，用于计算机之间的加密登录。&lt;/p&gt;

    &lt;p&gt;如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。&lt;/p&gt;

    &lt;p&gt;最早的时候，互联网通信都是明文通信，一旦被截获，内容就暴露无疑。1995年，芬兰学者Tatu Ylonen设计了SSH协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为Linux系统的标准配置。&lt;/p&gt;

    &lt;p&gt;需要指出的是，SSH只是一种协议，存在多种实现，既有商业实现，也有开源实现。本文针对的实现是OpenSSH，它是自由软件，应用非常广泛。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最基本的用法&lt;/p&gt;

    &lt;p&gt;SSH主要用于远程登录。假定你要以用户名user，登录远程主机host，只要一条简单命令就可以了。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh user@host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;如果本地用户名与远程用户名一致，登录时可以省略用户名。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;SSH的默认端口是22，也就是说，你的登录请求会送进远程主机的22端口。使用p参数，可以修改这个端口。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 2222 user@host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;上面这条命令表示，ssh直接连接远程主机的2222端口。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;中间人攻击&lt;/p&gt;

    &lt;p&gt;SSH之所以能够保证安全，原因在于它采用了公钥加密。&lt;/p&gt;

    &lt;p&gt;整个过程是这样的：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 3.1. 远程主机收到用户的登录请求，把自己的公钥发给用户。

 3.2. 用户使用这个公钥，将登录密码加密后，发送回来。

 3.3. 远程主机用自己的私钥，解密登录密码，如果密码正确，就同意用户登录。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;这个过程本身是安全的，但是实施的时候存在一个风险：如果有人截获了登录请求，然后冒充远程主机，将伪造的公钥发给用户，那么用户很难辨别真伪。因为不像https协议，SSH协议的公钥是没有证书中心（CA）公证的，也就是说，都是自己签发的。&lt;/p&gt;

    &lt;p&gt;可以设想，如果攻击者插在用户与远程主机之间（比如在公共的wifi区域），用伪造的公钥，获取用户的登录密码。再用这个密码登录远程主机，那么SSH的安全机制就荡然无存了。这种风险就是著名的”&lt;a href=&quot;http://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot; title=&quot;中间人攻击&quot;&gt;中间人攻击&lt;/a&gt;“（Man-in-the-middle attack）。&lt;/p&gt;

    &lt;p&gt;SSH协议是如何应对的呢？&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;口令登录&lt;/p&gt;

    &lt;p&gt;如果你是第一次登录对方主机，系统会出现下面的提示：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh user@host
&lt;span class=&quot;go&quot;&gt;
 　　The authenticity of host 'host (12.18.429.21)' can't be established.

 　　RSA key fingerprint is 98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d.

 　　Are you sure you want to continue connecting (yes/no)?
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;这段话的意思是，无法确认host主机的真实性，只知道它的公钥指纹，问你还想继续连接吗？&lt;/p&gt;

    &lt;p&gt;所谓”公钥指纹”，是指公钥长度较长（这里采用RSA算法，长达1024位），很难比对，所以对其进行MD5计算，将它变成一个128位的指纹。上例中是98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d，再进行比较，就容易多了。&lt;/p&gt;

    &lt;p&gt;很自然的一个问题就是，用户怎么知道远程主机的公钥指纹应该是多少？回答是没有好办法，远程主机必须在自己的网站上贴出公钥指纹，以便用户自行核对。&lt;/p&gt;

    &lt;p&gt;假定经过风险衡量以后，用户决定接受这个远程主机的公钥。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; 　　Are you sure you want to continue connecting (yes/no)? yes
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;系统会出现一句提示，表示host主机已经得到认可。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; 　　Warning: Permanently added 'host,12.18.429.21' (RSA) to the list of known hosts.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;然后，会要求输入密码。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; 　　Password: (enter password)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;如果密码正确，就可以登录了。&lt;/p&gt;

    &lt;p&gt;当远程主机的公钥被接受以后，它就会被保存在文件$HOME/.ssh/known_hosts之中。下次再连接这台主机，系统就会认出它的公钥已经保存在本地了，从而跳过警告部分，直接提示输入密码。&lt;/p&gt;

    &lt;p&gt;每个SSH用户都有自己的known_hosts文件，此外系统也有一个这样的文件，通常是/etc/ssh/ssh_known_hosts，保存一些对所有用户都可信赖的远程主机的公钥。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;公钥登录&lt;/p&gt;

    &lt;p&gt;使用密码登录，每次都必须输入密码，非常麻烦。好在SSH还提供了公钥登录，可以省去输入密码的步骤。&lt;/p&gt;

    &lt;p&gt;所谓”公钥登录”，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。&lt;/p&gt;

    &lt;p&gt;这种方法要求用户必须提供自己的公钥。如果没有现成的，可以直接用ssh-keygen生成一个：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh-keygen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;运行上面的命令以后，系统会出现一系列提示，可以一路回车。其中有一个问题是，要不要对私钥设置口令（passphrase），如果担心私钥的安全，这里可以设置一个。&lt;/p&gt;

    &lt;p&gt;运行结束以后，在$HOME/.ssh/目录下，会新生成两个文件：id_rsa.pub和id_rsa。前者是你的公钥，后者是你的私钥。&lt;/p&gt;

    &lt;p&gt;这时再输入下面的命令，将公钥传送到远程主机host上面：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh-copy-id user@host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;好了，从此你再登录，就不需要输入密码了。&lt;/p&gt;

    &lt;p&gt;如果还是不行，就打开远程主机的/etc/ssh/sshd_config这个文件，检查下面几行前面”#”注释是否取掉。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; 　　RSAAuthentication yes
 　　PubkeyAuthentication yes
 　　AuthorizedKeysFile .ssh/authorized_keys
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;然后，重启远程主机的ssh服务。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; 　　// ubuntu系统
 　　service ssh restart

 　　// debian系统
 　　/etc/init.d/ssh restart
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;authorized_keys文件&lt;/p&gt;

    &lt;p&gt;远程主机将用户的公钥，保存在登录后的用户主目录的$HOME/.ssh/authorized_keys文件中。公钥就是一段字符串，只要把它追加在authorized_keys文件的末尾就行了。&lt;/p&gt;

    &lt;p&gt;这里不使用上面的ssh-copy-id命令，改用下面的命令，解释公钥的保存过程：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh user@host &lt;span class=&quot;s1&quot;&gt;'mkdir -p .ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt; .ssh/authorized_keys'&lt;/span&gt; &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;这条命令由多个语句组成，依次分解开来看：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; （1）&quot;$ ssh user@host&quot;，表示登录远程主机；
 （2）单引号中的mkdir .ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt; .ssh/authorized_keys，表示登录后在远程shell上执行的命令；
 （3）&quot;$ mkdir -p .ssh&quot;的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；
 （4）'cat &amp;gt;&amp;gt; .ssh/authorized_keys' &amp;lt; ~/.ssh/id_rsa.pub的作用是，将本地的公钥文件~/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;写入authorized_keys文件后，公钥登录的设置就完成了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;远程操作&lt;/p&gt;

    &lt;p&gt;SSH不仅可以用于远程主机登录，还可以直接在远程主机上执行操作。&lt;/p&gt;

    &lt;p&gt;上一节的操作，就是一个例子：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh user@host &lt;span class=&quot;s1&quot;&gt;'mkdir -p .ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt; .ssh/authorized_keys'&lt;/span&gt; &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;单引号中间的部分，表示在远程主机上执行的操作；后面的输入重定向，表示数据通过SSH传向远程主机。&lt;/p&gt;

    &lt;p&gt;这就是说，SSH可以在用户和远程主机之间，建立命令和数据的传输通道，因此很多事情都可以通过SSH来完成。&lt;/p&gt;

    &lt;p&gt;下面看几个例子。&lt;/p&gt;

    &lt;p&gt;【例1】&lt;/p&gt;

    &lt;p&gt;将$HOME/src/目录下面的所有文件，复制到远程主机的$HOME/src/目录。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;czv src | ssh user@host &lt;span class=&quot;s1&quot;&gt;'tar xz'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;【例2】&lt;/p&gt;

    &lt;p&gt;将远程主机$HOME/src/目录下面的所有文件，复制到用户的当前目录。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh user@host &lt;span class=&quot;s1&quot;&gt;'tar cz src'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;xzv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;【例3】&lt;/p&gt;

    &lt;p&gt;查看远程主机是否运行进程httpd。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh user@host &lt;span class=&quot;s1&quot;&gt;'ps ax | grep [h]ttpd'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;绑定本地端口&lt;/p&gt;

    &lt;p&gt;既然SSH可以传送数据，那么我们可以让那些不加密的网络连接，全部改走SSH连接，从而提高安全性。&lt;/p&gt;

    &lt;p&gt;假定我们要让8080端口的数据，都通过SSH传向远程主机，命令就这样写：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;     $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; 8080 user@host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;SSH会建立一个socket，去监听本地的8080端口。一旦有数据传向那个端口，就自动把它转移到SSH连接上面，发往远程主机。可以想象，如果8080端口原来是一个不加密端口，现在将变成一个加密端口。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;本地端口转发&lt;/p&gt;

    &lt;p&gt;有时，绑定本地端口还不够，还必须指定数据传送的目标主机，从而形成点对点的”端口转发”。为了区别后文的”远程端口转发”，我们把这种情况称为”本地端口转发”（Local forwarding）。&lt;/p&gt;

    &lt;p&gt;假定host1是本地主机，host2是远程主机。由于种种原因，这两台主机之间无法连通。但是，另外还有一台host3，可以同时连通前面两台主机。因此，很自然的想法就是，通过host3，将host1连上host2。&lt;/p&gt;

    &lt;p&gt;我们在host1执行下面的命令：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; 2121:host2:21 host3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;命令中的L参数一共接受三个值，分别是”本地端口:目标主机:目标主机端口”，它们之间用冒号分隔。这条命令的意思，就是指定SSH绑定本地端口2121，然后指定host3将所有的数据，转发到目标主机host2的21端口（假定host2运行FTP，默认端口为21）。&lt;/p&gt;

    &lt;p&gt;这样一来，我们只要连接host1的2121端口，就等于连上了host2的21端口。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ftp localhost:2121
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;“本地端口转发”使得host1和host3之间仿佛形成一个数据传输的秘密隧道，因此又被称为”SSH隧道”。&lt;/p&gt;

    &lt;p&gt;下面是一个比较有趣的例子。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; 5900:localhost:5900 host3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;它表示将本机的5900端口绑定host3的5900端口（这里的localhost指的是host3，因为目标主机是相对host3而言的）。&lt;/p&gt;

    &lt;p&gt;另一个例子是通过host3的端口转发，ssh登录host2。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; 9001:host2:22 host3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;这时，只要ssh登录本机的9001端口，就相当于登录host2了。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; 　　$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 9001 localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;上面的-p参数表示指定登录端口。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;远程端口转发&lt;/p&gt;

    &lt;p&gt;既然”本地端口转发”是指绑定本地端口的转发，那么”远程端口转发”（remote forwarding）当然是指绑定远程端口的转发。&lt;/p&gt;

    &lt;p&gt;还是接着看上面那个例子，host1与host2之间无法连通，必须借助host3转发。但是，特殊情况出现了，host3是一台内网机器，它可以连接外网的host1，但是反过来就不行，外网的host1连不上内网的host3。这时，”本地端口转发”就不能用了，怎么办？&lt;/p&gt;

    &lt;p&gt;解决办法是，既然host3可以连host1，那么就从host3上建立与host1的SSH连接，然后在host1上使用这条连接就可以了。&lt;/p&gt;

    &lt;p&gt;我们在host3执行下面的命令：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 2121:host2:21 host1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;R参数也是接受三个值，分别是”远程主机端口:目标主机:目标主机端口”。这条命令的意思，就是让host1监听它自己的2121端口，然后将所有数据经由host3，转发到host2的21端口。由于对于host3来说，host1是远程主机，所以这种情况就被称为”远程端口绑定”。&lt;/p&gt;

    &lt;p&gt;绑定之后，我们在host1就可以连接host2了：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ftp localhost:2121
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;这里必须指出，”远程端口转发”的前提条件是，host1和host3两台主机都有sshD和ssh客户端。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SSH的其他参数&lt;/p&gt;

    &lt;p&gt;SSH还有一些别的参数，也值得介绍。&lt;/p&gt;

    &lt;p&gt;N参数，表示只连接远程主机，不打开远程shell；T参数，表示不为这个连接分配TTY。这个两个参数可以放在一起用，代表这个SSH连接只用来传数据，不执行远程操作。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-NT&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; 8080 host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;f参数，表示SSH连接成功后，转入后台运行。这样一来，你就可以在不中断SSH连接的情况下，在本地shell中执行其他操作。&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; 8080 host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;要关闭这个后台连接，就只有用kill命令去杀掉进程。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;参考文献&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　* SSH, The Secure Shell: The Definitive Guide:  &lt;a href=&quot;http://docstore.mik.ua/orelly/networking_2ndEd/ssh/ch02_04.htm&quot; title=&quot;2.4. Authentication by Cryptographic Key&quot;&gt;2.4. Authentication by Cryptographic Key&lt;/a&gt;, O’reilly&lt;/p&gt;

&lt;p&gt;　　* SSH, The Secure Shell: The Definitive Guide: &lt;a href=&quot;http://docstore.mik.ua/orelly/networking_2ndEd/ssh/ch09_02.htm&quot; title=&quot;9.2. Port Forwarding&quot;&gt;9.2. Port Forwarding&lt;/a&gt;, O’reilly&lt;/p&gt;

&lt;p&gt;　　* Shebang: &lt;a href=&quot;http://shebang.brandonmintern.com/tips-for-remote-unix-work-ssh-screen-and-vnc&quot; title=&quot;Tips for Remote Unix Work (SSH, screen, and VNC)&quot;&gt;Tips for Remote Unix Work (SSH, screen, and VNC)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　* brihatch: &lt;a href=&quot;http://www.symantec.com/connect/articles/ssh-host-key-protection&quot; title=&quot;SSH Host Key Protection&quot;&gt;SSH Host Key Protection&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　* brihatch: &lt;a href=&quot;http://www.symantec.com/connect/articles/ssh-user-identities&quot; title=&quot;SSH User Identities&quot;&gt;SSH User Identities&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　* IBM developerWorks: &lt;a href=&quot;http://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/&quot; title=&quot;实战 SSH 端口转发&quot;&gt;实战 SSH 端口转发&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　* Jianing YANG：&lt;a href=&quot;http://blog.jianingy.com/2009/09/ssh%E9%9A%A7%E9%81%93%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B/&quot; title=&quot;ssh隧道技术简介&quot;&gt;ssh隧道技术简介&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　* WikiBooks: &lt;a href=&quot;http://en.wikibooks.org/wiki/Internet_Technologies/SSH&quot; title=&quot;Internet Technologies/SSH&quot;&gt;Internet Technologies/SSH&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　* Buddhika Chamith: SSH Tunneling Explained &lt;a href=&quot;http://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/&quot; title=&quot;SSH Tunneling Explained&quot;&gt;SSH Tunneling Explained&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Linux" /><summary type="html"></summary></entry><entry><title type="html">English Vocabulary - Fruit</title><link href="http://localhost:4000/english-vocabulary-fruit/" rel="alternate" type="text/html" title="English Vocabulary - Fruit" /><published>2020-02-17T00:00:00-08:00</published><updated>2020-02-17T00:00:00-08:00</updated><id>http://localhost:4000/english-vocabulary-fruit</id><content type="html" xml:base="http://localhost:4000/english-vocabulary-fruit/">&lt;p&gt;&lt;img src=&quot;https://www.snopes.com/tachyon/2018/04/fruits_feature.jpg?resize=865,452&amp;amp;quality=65&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;fruit&quot;&gt;Fruit&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Apple [ˈæpl] 苹果&lt;/p&gt;

&lt;p&gt;　　Apricot [ˈeprɪˌkɑt] 杏桃&lt;/p&gt;

&lt;p&gt;　　Almond [‘ɑmənd]杏仁&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Banana [bəˈnɑ：nə] 香蕉&lt;/p&gt;

&lt;p&gt;　　Betelnut [‘bitl，nʌt]槟榔&lt;/p&gt;

&lt;p&gt;　　Bitter orange 苦柑橘&lt;/p&gt;

&lt;p&gt;　　Blackberry [‘blæk’bɛri] 黑莓&lt;/p&gt;

&lt;p&gt;　　Blueberry [‘blubɛri] 蓝莓&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Cherry [ˈtʃeri] 樱桃&lt;/p&gt;

&lt;p&gt;　　Crabapple [‘kræb’æpl] 海棠果&lt;/p&gt;

&lt;p&gt;　　Carambola [，kærəm‘bolə]杨桃&lt;/p&gt;

&lt;p&gt;　　Cherry tomato圣女果&lt;/p&gt;

&lt;p&gt;　　Chestnut  [‘tʃɛsnʌt] 栗子&lt;/p&gt;

&lt;p&gt;　　Coconut [‘kokənʌt] 椰子&lt;/p&gt;

&lt;p&gt;　　Cranberry [‘kræn’bɛri]曼越莓&lt;/p&gt;

&lt;p&gt;　　Cumquat[‘kʌmkwɔt]金桔&lt;/p&gt;

&lt;p&gt;　　Custard[‘kʌstɚd] apple 番荔枝&lt;/p&gt;

&lt;p&gt;　　Common fig [fɪɡ]无花果&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Damson [‘dæmzn] 洋李子（黑紫色）&lt;/p&gt;

&lt;p&gt;　　Dates 枣子&lt;/p&gt;

&lt;p&gt;　　Durian [‘dʊərɪən]榴莲&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;G&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Grape [greɪp] 葡萄&lt;/p&gt;

&lt;p&gt;　　Grapefruit [‘ɡrepfrut]葡萄柚&lt;/p&gt;

&lt;p&gt;　　Guava [‘ɡwɑvə]番石榴&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;H&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Haw [hɔ]山楂&lt;/p&gt;

&lt;p&gt;　　Hami melon 哈蜜瓜&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;K&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Kiwifruit[‘kiwi，frʊt]奇异果，猕猴桃&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;L&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Lemon [ˈlemən] 柠檬&lt;/p&gt;

&lt;p&gt;　　Lichee[，lɪ‘tʃi] 荔枝&lt;/p&gt;

&lt;p&gt;　　Longan [‘lɔŋɡən]龙眼、桂圆&lt;/p&gt;

&lt;p&gt;　　Loquat [‘lokwɑt]枇杷&lt;/p&gt;

&lt;p&gt;　　Lotus nut （seed） 莲子&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;M&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Mango [ˈmæŋgəʊ] 芒果&lt;/p&gt;

&lt;p&gt;　　Mandarin[‘mændərɪn] 中国柑桔&lt;/p&gt;

&lt;p&gt;　　Mangosteen[‘mæŋgə，stin]山竹&lt;/p&gt;

&lt;p&gt;　　Muskmelon[‘mʌsk，mɛlən]甜瓜总称&lt;/p&gt;

&lt;p&gt;　　Mulberry [‘mʌl’bɛri]桑果&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;N&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Nectarine[ˌnɛktəˈrin] 油桃&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;O&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Olive 橄榄&lt;/p&gt;

&lt;p&gt;　　Orange 橙子&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;P&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Papaya [pə‘paɪə] （Pawpaw） 木瓜&lt;/p&gt;

&lt;p&gt;　　Peach 桃子&lt;/p&gt;

&lt;p&gt;　　Peanut 花生&lt;/p&gt;

&lt;p&gt;　　Pear 梨&lt;/p&gt;

&lt;p&gt;　　Persimmon[pɚ‘sɪmən] 柿子&lt;/p&gt;

&lt;p&gt;　　Pineapple [‘paɪn’æpl] 菠萝&lt;/p&gt;

&lt;p&gt;　　Pistachio[pɪˈstæʃiˌoʊ]开心果&lt;/p&gt;

&lt;p&gt;　　Pitaya [‘pɪtəjɚ]火龙果&lt;/p&gt;

&lt;p&gt;　　Plum 李子&lt;/p&gt;

&lt;p&gt;　　Pomegranate [‘pɑmɪɡrænɪt]石榴&lt;/p&gt;

&lt;p&gt;　　Pomelo [‘pɑməlo]柚子&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Rambutan [ræm‘butn]红毛丹&lt;/p&gt;

&lt;p&gt;　　Raspberry [‘ræzbəri] 树莓&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Shaddock [‘ʃædək] 文旦&lt;/p&gt;

&lt;p&gt;　　Strawberry 草莓&lt;/p&gt;

&lt;p&gt;　　Sugar cane 甘蔗&lt;/p&gt;

&lt;p&gt;　　Sunflower seeds 瓜子&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;W&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Walnut[‘wɔlnət]核桃&lt;/p&gt;

&lt;p&gt;　　Water Caltrop[‘kæltrəp]菱角&lt;/p&gt;

&lt;p&gt;　　Water-chestnut[‘tʃɛsnʌt]马蹄、荸荠&lt;/p&gt;

&lt;p&gt;　　Watermelon[‘wɔtɚmɛlən] 西瓜&lt;/p&gt;

&lt;p&gt;　　Waxberry[‘wæks，bɛri]杨梅&lt;/p&gt;

&lt;p&gt;　　Wax apple莲雾&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Others&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　Pulp/flesh 果肉&lt;/p&gt;

&lt;p&gt;　　core核&lt;/p&gt;

&lt;p&gt;　　Apple core 苹果核&lt;/p&gt;

&lt;p&gt;　　Pit 核&lt;/p&gt;

&lt;p&gt;　　Apricot pit杏仁核&lt;/p&gt;

&lt;p&gt;　　Kernel[‘kɝnl]核&lt;/p&gt;

&lt;p&gt;　　Nucleus [‘nuklɪəs]核仁&lt;/p&gt;

&lt;p&gt;　　Seed 籽&lt;/p&gt;

&lt;p&gt;　　Skin皮&lt;/p&gt;

&lt;p&gt;　　Peel 皮&lt;/p&gt;

&lt;p&gt;　　Tender 嫩的&lt;/p&gt;

&lt;p&gt;　　Bitter苦的&lt;/p&gt;

&lt;p&gt;　　Canned fruit 水果罐头&lt;/p&gt;

&lt;p&gt;　　Crisp 脆的&lt;/p&gt;

&lt;p&gt;　　Rotten [‘rɑtn] 烂的&lt;/p&gt;

&lt;p&gt;　　Ripe [raɪp] 熟的（特指水果）&lt;/p&gt;

&lt;p&gt;　　Unripe 未熟的&lt;/p&gt;

&lt;p&gt;　　Flavor 味道&lt;/p&gt;

&lt;p&gt;　　Fresh 新鲜的&lt;/p&gt;

&lt;p&gt;　　Hard 坚硬的&lt;/p&gt;

&lt;p&gt;　　Juice 果汁&lt;/p&gt;

&lt;p&gt;　　Juicy 多汁的&lt;/p&gt;

&lt;p&gt;　　Succulent 多汁的&lt;/p&gt;

&lt;p&gt;　　Dew 果露&lt;/p&gt;

&lt;p&gt;　　Seasonable 应季的&lt;/p&gt;

&lt;p&gt;　　Greengrocer [‘ɡrinɡrosɚ] 蔬果商&lt;/p&gt;</content><author><name></name></author><category term="English" /><summary type="html"></summary></entry><entry><title type="html">Actual speaking English - 02</title><link href="http://localhost:4000/english-speaking-2/" rel="alternate" type="text/html" title="Actual speaking English - 02" /><published>2020-02-16T00:00:00-08:00</published><updated>2020-02-16T00:00:00-08:00</updated><id>http://localhost:4000/english-speaking-2</id><content type="html" xml:base="http://localhost:4000/english-speaking-2/">&lt;p&gt;&lt;img src=&quot;https://i.pinimg.com/474x/bb/b5/0f/bbb50fc5dbf12dd27e65750159d7af55.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Hello, everyone. My name is Peter Liptak and I’m looking forward to working with all of you here at EBS. As a new employee, I’m hoping to meet each and every one of you individually and get to know you, as well as get your feedback on what we could do to improve things here.&lt;/p&gt;

&lt;p&gt;As to (for) my background, I have a lot of experience in education and writing. I’ve worked in education for about twenty years: been a professor, a private instructor, and also, even a pre-school teacher, so I’m fairly well-rounded in that experience. As a professional writer, I’ve been working for many years with large conglomerates and some governmental organizations, as well as publishing books. I publish ESL books, children’s books and even books on Korea. Anyway, thank you all and please come and talk to me when you have a chance.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I'm looking forward to + verb / verb-ing

I'm looking forward to showing you my capabilities.

As a new employee, I hope to / I'm hoping to + verb

As a new employee, I hope to be successful in my role.

As for my background, I have experience in + noun / of + verb-ing.

As for my background, I have experience of working abroad.

As for my background, I have work experience in teaching / planning.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="English" /><summary type="html"></summary></entry><entry><title type="html">Mac OS X - iterm2 安装 美化</title><link href="http://localhost:4000/mac-iterm2/" rel="alternate" type="text/html" title="Mac OS X - iterm2 安装 美化" /><published>2020-02-15T00:00:00-08:00</published><updated>2020-02-15T00:00:00-08:00</updated><id>http://localhost:4000/mac-iterm2</id><content type="html" xml:base="http://localhost:4000/mac-iterm2/">&lt;p&gt;&lt;img src=&quot;https://iterm2.com/img/logo2x.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;下载安装iterm2&lt;/p&gt;

    &lt;p&gt;官方网站： https://www.iterm2.com&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;切换shell为zsh&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
 ~ ❯❯❯ chsh -s /bin/zsh
 Changing shell for xxx.
 Password for xxx:

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt; ~ ❯❯❯ echo $&lt;/span&gt;SHELL
&lt;span class=&quot;go&quot;&gt; /bin/zsh

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装Oh my zsh&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;使用 crul 安装：&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; sh -c &quot;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;使用 wget 安装：&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; sh -c &quot;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; -&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装PowerLine&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;先安装pip&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; sudo easy_install pip
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;再安装Powerline&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; pip install powerline-status
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装额外的自体库&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; #&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;clone
&lt;span class=&quot;go&quot;&gt; git clone https://github.com/powerline/fonts.git --depth=1
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt; #&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt; cd fonts
 ./install.sh
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt; #&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;clean-up a bit
&lt;span class=&quot;go&quot;&gt; cd ..
 rm -rf fonts
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;安装好之后，选择一款Powerline字体了：iterm2 -&amp;gt; Preferences -&amp;gt; Profiles -&amp;gt; Text -&amp;gt; Font -&amp;gt; Change Font（我用的是Meslo LG)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改配色&lt;/p&gt;

    &lt;p&gt;iTerm2 -&amp;gt; Preferences -&amp;gt; Profiles -&amp;gt; Colors -&amp;gt; Color Presets中根据个人喜好选择这已安装配色中的一种即可（或者安装新配色）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改主题配置&lt;/p&gt;

    &lt;p&gt;用vim编辑器打开隐藏文件.zshrc，将ZSH_THEME后面字段改为agnoster.&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; ZSH_THEME=&quot;agnoster&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设置高亮&lt;/p&gt;

    &lt;p&gt;直接使用homebrew安装zsh-syntax-highlighting插件&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; brew install zsh-syntax-highlighting
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;然后在根目录下.zshrc中插入下面内容：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;或者git安装：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt; echo &quot;source $&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{(&lt;/span&gt;q-&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;PWD&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&lt;span class=&quot;s2&quot;&gt;&quot; &amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ZDOTDIR&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.zshrc
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自动补全（会严重影响响应速度，不推荐）&lt;/p&gt;

    &lt;p&gt;自动补全插件incr：
 可以使用下面代码手动写入文件&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; cd ~/.oh-my-zsh/plugins/
 mkdir -p incr
 cd incr
 touch incr-0.2.zsh（将上面链接中的代码复制粘贴到incr-0.2.zsh文件中）   chmod 777 incr-0.2.zsh
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;配置.zshrc文件&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; vim ~/.zshrc
 source ~/.oh-my-zsh/plugins/incr/incr*.zsh
 source ~/.zshrc 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;另一个zsh的插件，叫做zsh-autosuggestion&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; cd ~/.oh-my-zsh/custom/plugins/
 git clone https://github.com/zsh-users/zsh-autosuggestions
 vi ~/.zshrc
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;找到plugins，加上这个插件即可：&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; plugins=(
     zsh-autosuggestion
 )
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="Mac" /><summary type="html"></summary></entry><entry><title type="html">persistence and serialization in Java</title><link href="http://localhost:4000/java-persistence-serialization/" rel="alternate" type="text/html" title="persistence and serialization in Java" /><published>2020-02-14T00:00:00-08:00</published><updated>2020-02-14T00:00:00-08:00</updated><id>http://localhost:4000/java-persistence-serialization</id><content type="html" xml:base="http://localhost:4000/java-persistence-serialization/">&lt;p&gt;&lt;img src=&quot;https://koenig-media.raywenderlich.com/uploads/2017/08/UnitySaveLoad-feature.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;对象持久化就是将对象存储在可持久保存的存储介质上，例如主流的关系数据库中。在实际应用中，需要将业务数据以对象的方式保存在数据库中，就需要应用到相应的对象持久化框架，如现在广为认知的Hibernate。而如果查阅对象持久化的历史，会发现早在1970年就已经开始有称之为面向对象数据库OODBMS。通常这些面向对象的数据库和特定的一种语言绑定。&lt;strong&gt;对象持久化的重点在于如何将业务数据对象存储在持久化介质上，并同时提供查询修改的手段&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;数据序列化就是将对象或者数据结构转化成特定的格式，使其可以在网络中传输，或者可存储在内存或者文件中。反序列化则是相反的操作，将对象从序列化数据中还原出来。而对象序列化后的数据格式可以是二进制，可以是XML，也可以是JSON等任何格式。&lt;strong&gt;对象/数据序列化的重点在于数据的交换和传输&lt;/strong&gt;，例如在远程调用技术（如EJB，XML-RPC，Web Service），或者在GUI控件开发（JavaBean）等等。&lt;/p&gt;

&lt;p&gt;总结，对象持久化和对象序列化是两个不同应用场景不同纬度的两个概念。&lt;/p&gt;

&lt;p&gt;对象持久化是一个&lt;strong&gt;广义&lt;/strong&gt;的概念，简单说就是save/load，多用以描述和数据库相关的操作。&lt;/p&gt;

&lt;p&gt;序列化是Java中的一项技术，把结构化的对象转化成无结构的字节流，侧重于数据交换和传输，不仅仅能用于数据的持久化。&lt;/p&gt;</content><author><name></name></author><category term="Java" /><summary type="html"></summary></entry><entry><title type="html">Serialization and Deserialization in Java</title><link href="http://localhost:4000/java-serializable/" rel="alternate" type="text/html" title="Serialization and Deserialization in Java" /><published>2020-02-14T00:00:00-08:00</published><updated>2020-02-14T00:00:00-08:00</updated><id>http://localhost:4000/java-serializable</id><content type="html" xml:base="http://localhost:4000/java-serializable/">&lt;p&gt;&lt;img src=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/media/index/serialization-process.gif&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;serialization-and-deserialization-in-java-with-example&quot;&gt;Serialization and Deserialization in Java with Example&lt;/h1&gt;

&lt;p&gt;Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory. This mechanism is used to persist the object.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.geeksforgeeks.org/wp-content/cdn-uploads/gq/2016/01/serialize-deserialize-java.png&quot; alt=&quot;avatar&quot; title=&quot;serialization&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The byte stream created is platform independent. So, the object serialized on one platform can be deserialized on a different platform.&lt;/p&gt;

&lt;p&gt;To make a Java object serializable we implement the java.io.Serializable interface.
The ObjectOutputStream class contains writeObject() method for serializing an Object.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;writeObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                       &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The ObjectInputStream class contains readObject() method for deserializing an object.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                  &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nc&quot;&gt;ClassNotFoundException&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Advantages of Serialization&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To save/persist state of an object.&lt;/li&gt;
  &lt;li&gt;To travel an object across a network.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://media.geeksforgeeks.org/wp-content/uploads/serialization-5.jpg&quot; alt=&quot;avatar&quot; title=&quot;serialization&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Only the objects of those classes can be serialized which are implementing &lt;strong&gt;java.io.Serializable&lt;/strong&gt; interface.
Serializable is a &lt;strong&gt;marker interface&lt;/strong&gt; (has no data member and method). It is used to “mark” java classes so that objects of these classes may get certain capability. Other examples of marker interfaces are:- Cloneable and Remote.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Points to remember&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If a parent class has implemented Serializable interface then child class doesn’t need to implement it but vice-versa is not true.&lt;/li&gt;
  &lt;li&gt;Only non-static data members are saved via Serialization process.&lt;/li&gt;
  &lt;li&gt;Static data members and transient data members are not saved via Serialization process.So, if you don’t want to save value of a non-static data member then make it transient.&lt;/li&gt;
  &lt;li&gt;Constructor of object is never called when an object is deserialized.&lt;/li&gt;
  &lt;li&gt;Associated objects must be implementing Serializable interface.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example :&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Serializable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// B also implements Serializable&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// interface.&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ob&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;SerialVersionUID&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Serialization runtime associates a version number with each Serializable class called a SerialVersionUID, which is used during Deserialization to verify that sender and reciever of a serialized object have loaded classes for that object which are compatible with respect to serialization. If the reciever has loaded a class for the object that has different UID than that of corresponding sender’s class, the Deserialization will result in an &lt;strong&gt;InvalidClassException&lt;/strong&gt;. A Serializable class can declare its own UID explicitly by declaring a field name.
It must be static, final and of type long.
i.e- ANY-ACCESS-MODIFIER static final long serialVersionUID=42L;&lt;/p&gt;

&lt;p&gt;If a serializable class doesn’t explicitly declare a serialVersionUID, then the serialization runtime will calculate a default one for that class based on various aspects of class, as described in Java Object Serialization Specification. However it is strongly recommended that all serializable classes explicitly declare serialVersionUID value, since its computation is highly sensitive to class details that may vary depending on compiler implementations, any change in class or using different id may affect the serialized data.&lt;/p&gt;

&lt;p&gt;It is also recommended to use private modifier for UID since it is not useful as inherited member.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;serialver&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The serialver is a tool that comes with JDK. It is used to get serialVersionUID number for Java classes.
You can run the following command to get serialVersionUID&lt;/p&gt;

&lt;p&gt;serialver [-classpath classpath] [-show] [classname…]&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.geeksforgeeks.org/wp-content/uploads/serialver.jpg&quot; alt=&quot;avatar&quot; title=&quot;serialization&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Example 1:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Java code for serialization and deserialization &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// of a Java object &lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Demo&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Serializable&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

	&lt;span class=&quot;c1&quot;&gt;// Default constructor &lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
		&lt;span class=&quot;nc&quot;&gt;Demo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;geeksforgeeks&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;file.ser&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
		
		&lt;span class=&quot;c1&quot;&gt;// Serialization &lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
			&lt;span class=&quot;c1&quot;&gt;//Saving of object in a file &lt;/span&gt;
			&lt;span class=&quot;nc&quot;&gt;FileOutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FileOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;ObjectOutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ObjectOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			
			&lt;span class=&quot;c1&quot;&gt;// Method for serialization of object &lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			
			&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
			
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Object has been serialized&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 

		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
		
		&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IOException is caught&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 


		&lt;span class=&quot;nc&quot;&gt;Demo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

		&lt;span class=&quot;c1&quot;&gt;// Deserialization &lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
			&lt;span class=&quot;c1&quot;&gt;// Reading the object from a file &lt;/span&gt;
			&lt;span class=&quot;nc&quot;&gt;FileInputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FileInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;ObjectInputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ObjectInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			
			&lt;span class=&quot;c1&quot;&gt;// Method for deserialization of object &lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
			
			&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
			
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Object has been deserialized &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
		
		&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IOException is caught&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
		
		&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ClassNotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ClassNotFoundException is caught&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Output :&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;Object has been serialized
Object has been deserialized 
a = 1
b = geeksforgeeks
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example 2:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Java code for serialization and deserialization &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// of a Java object &lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Serializable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialversionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
								&lt;span class=&quot;mi&quot;&gt;129348938L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
	&lt;span class=&quot;kd&quot;&gt;transient&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
	&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

	&lt;span class=&quot;c1&quot;&gt;// Default constructor &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SerialExample&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;printdata&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 

		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;age = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
		&lt;span class=&quot;nc&quot;&gt;Emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ab&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;shubham.txt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

		&lt;span class=&quot;c1&quot;&gt;// Serialization &lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 

			&lt;span class=&quot;c1&quot;&gt;// Saving of object in a file &lt;/span&gt;
			&lt;span class=&quot;nc&quot;&gt;FileOutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FileOutputStream&lt;/span&gt; 
										&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;ObjectOutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ObjectOutputStream&lt;/span&gt; 
										&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 

			&lt;span class=&quot;c1&quot;&gt;// Method for serialization of object &lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 

			&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 

			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Object has been serialized\n&quot;&lt;/span&gt;
							&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Data before Deserialization.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;printdata&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 

			&lt;span class=&quot;c1&quot;&gt;// value of static variable changed &lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

		&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IOException is caught&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

		&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

		&lt;span class=&quot;c1&quot;&gt;// Deserialization &lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 

			&lt;span class=&quot;c1&quot;&gt;// Reading the object from a file &lt;/span&gt;
			&lt;span class=&quot;nc&quot;&gt;FileInputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FileInputStream&lt;/span&gt; 
										&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;ObjectInputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ObjectInputStream&lt;/span&gt; 
										&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 

			&lt;span class=&quot;c1&quot;&gt;// Method for deserialization of object &lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Emp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 

			&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Object has been deserialized\n&quot;&lt;/span&gt;
								&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Data after Deserialization.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;printdata&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 

			&lt;span class=&quot;c1&quot;&gt;// System.out.println(&quot;z = &quot; + object1.z); &lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

		&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IOException is caught&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

		&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ClassNotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ClassNotFoundException&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
								&lt;span class=&quot;s&quot;&gt;&quot; is caught&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;Object has been serialized
Data before Deserialization.
name = ab
age = 20
a = 2
b = 1000
Object has been deserialized
Data after Deserialization.
name = ab
age = 20
a = 0
b = 2000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Description for Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You have seen while deserializing the object the values of a and b has changed. The reason being a was marked as transient and b was static.
In case of &lt;strong&gt;transient variables:-&lt;/strong&gt; A variable defined with transient keyword is not serialized during serialization process.This variable will be initialized with default value during deserialization. (e.g: for objects it is null, for int it is 0).
In case of &lt;strong&gt;static Variables:-&lt;/strong&gt; A variable defined with static keyword is not serialized during serialization process.This variable will be loaded with current value defined in the class during deserialization.&lt;/p&gt;</content><author><name></name></author><category term="Java" /><summary type="html"></summary></entry><entry><title type="html">什么是 JavaBean</title><link href="http://localhost:4000/java-bean/" rel="alternate" type="text/html" title="什么是 JavaBean" /><published>2020-02-13T00:00:00-08:00</published><updated>2020-02-13T00:00:00-08:00</updated><id>http://localhost:4000/java-bean</id><content type="html" xml:base="http://localhost:4000/java-bean/">&lt;p&gt;&lt;img src=&quot;https://docs.oracle.com/javase/8/docs/technotes/guides/beans/spec/images/beancontext.gif&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;什么是javabean&quot;&gt;什么是JavaBean&lt;/h1&gt;

    &lt;p&gt;JavaBean是一个遵循特定写法的Java类，它通常具有如下特点：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;这个Java类必须具有一个无参的构造函数&lt;/li&gt;
      &lt;li&gt;属性必须私有化&lt;/li&gt;
      &lt;li&gt;私有化的属性必须通过public类型的方法暴露给其它程序，并且方法的命名也必须遵守一定的命名规范。&lt;/li&gt;
      &lt;li&gt;必须实现序列化&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;javabean作用&quot;&gt;JavaBean作用&lt;/h1&gt;

    &lt;p&gt;JavaBean在J2EE开发中，通常用于封装数据，对于遵循以上写法的JavaBean组件，其它程序可以通过反射技术实例化JavaBean对象，并且通过反射那些遵守命名规范的方法，从而获知JavaBean的属性，进而调用其属性保存数据。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;javabean的属性&quot;&gt;JavaBean的属性&lt;/h1&gt;

    &lt;ul&gt;
      &lt;li&gt;JavaBean的属性可以是任意类型，并且一个JavaBean可以有多个属性。每个属性通常都需要具有相应的setter、 getter方法，setter方法称为属性修改器，getter方法称为属性访问器。&lt;/li&gt;
      &lt;li&gt;属性修改器必须以小写的set前缀开始，后跟属性名，且属性名的第一个字母要改为大写，例如，name属性的修改器名称为setName，password属性的修改器名称为setPassword。&lt;/li&gt;
      &lt;li&gt;属性访问器通常以小写的get前缀开始，后跟属性名，且属性名的第一个字母也要改为大写，例如，name属性的访问器名称为getName，password属性的访问器名称为getPassword。&lt;/li&gt;
      &lt;li&gt;一个JavaBean的某个属性也可以只有set方法或get方法，这样的属性通常也称之为只写、只读属性。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;java-bean类实现serializable接口的原因&quot;&gt;Java Bean类实现Serializable接口的原因&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Serializable接口能帮我们做些什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如上所述，读写对象会有什么问题呢？比如：我要将对象写入一个磁盘文件而后再将其读出来会有什么问题吗？别急，其中一个最大的问题就是对象引用！举个例子来说：假如我有两个类，分别是A和B，B类中含有一个指向A类对象的引用，现在我们对两个类进行实例化{ A a = new A(); B b = new B(); }，这时在内存中实际上分配了两个空间，一个存储对象a，一个存储对象b，接下来我们想将它们写入到磁盘的一个文件中去，就在写入文件时出现了问题！因为对象b包含对对象a的引用，所以系统会自动的将a的数据复制一份到b中，这样的话当我们从文件中恢复对象时(也就是重新加载到内存中)时，内存分配了三个空间，而对象a同时在内存中存在两份，想一想后果吧，如果我想修改对象a的数据的话，那不是还要搜索它的每一份拷贝来达到对象数据的一致性，这不是我们所希望的！&lt;/p&gt;

&lt;p&gt;以下序列化机制的解决方案：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 保存到磁盘的所有对象都获得一个序列号(1, 2, 3等等)
2. 当要保存一个对象时，先检查该对象是否被保存了
3. 如果以前保存过，只需写入&quot;与已经保存的具有序列号x的对象相同&quot;的标记，否则，保存该对象通过以上的步骤序列化机制解决了对象引用的问题！
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在对对象进行实例化的过程中相关注意事项&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 读取对象的顺序必须与写入的顺序相同
2. 如果有不能被序列化的对象，执行期间就会抛出NotSerializableException异常
3. 序列化时，只对对象的状态进行保存，而不管对象的方法
2. 当一个父类实现序列化，子类自动实现序列化，不需要显式实现Serializable接口
4. 当一个对象的实例变量引用其他对象，序列化该对象时也把引用对象进行序列化，而且会是递归的方式。 （序列化程序会将对象版图上的所有东西储存下来，这样才能让该对象恢复到原来的状态）
5. 如果子类实现Serializable接口而父类未实现时，父类不会被序列化，但此时父类必须有个无参构造方法，否则会抛InvalidClassException异常，因为反序列化时会恢复原有子对象的状态，而父类的成员变量也是原有子对象的一部分。由于父类没有实现序列化接口，即使没有显示调用，也会默认执行父类的无参构造函数使变量初始化
6. 并非所有的对象都可以序列化
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;至于为什么不可以，有很多原因了，比如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 安全方面的原因，比如一个对象拥有private，public等field，对于一个要传输的对象，比如写到文件，或者进行RMI传输  等等，在序列化进行传输的过程中，这个对象的private等域是不受保护的。
2. 资源分配方面的原因，比如socket，thread类，如果可以序列化，进行传输或者保存，也无法对他们进行重新的资源分配，而且，也是没有必要这样实现。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;深入理解&quot;&gt;深入理解&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. 序列化算法透析&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Serialization（序列化）是一种将对象以一连串的字节描述的过程；反序列化deserialization是一种将这些字节重建成一个对象的过程。&lt;/p&gt;

&lt;p&gt;序列化算法一般会按步骤做如下事情：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;将对象实例相关类的描述。&lt;/li&gt;
  &lt;li&gt;递归地输出类的超类描述直到不再有超类。&lt;/li&gt;
  &lt;li&gt;从最顶层的超类开始输出对象实例的实际数据值。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. 序列化ID的问题&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;serialVersionUID适用于JAVA的序列化机制。简单来说，Java的序列化机制是通过判断类的serialVersionUID来验证版本一致性的。
在进行反序列化时，JVM会把传来的字节流中的serialVersionUID与本地相应实体类的serialVersionUID进行比较，如果相同就认为是一致的，可以进行反序列化，否则就会出现序列化版本不一致的异常，即是InvalidCastException。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 序列化存储规则&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Java 序列化机制为了节省磁盘空间，具有特定的存储规则，当写入文件的为同一对象时，并不会再将对象的内容进行存储，而只是再次存储一份引用；
序列化到同一个文件时，如第二次修改了相同对象属性值再次保存时候，虚拟机根据引用关系知道已经有一个相同对象已经写入文件，因此只保存第二次写的引用，所以读取时，都是第一次保存的对象。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/cn/java/j-lo-serial/&quot;&gt;详细介绍&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 多次序列化的问题&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在一次的序列化的过程中，ObjectOutputStream 会在文件开始的地方写入一个 Header 的信息到文件中。于是在多次序列化的过程中就会继续在文件末尾（本次序列化的开头）写入 Header 的信息，这时如果进行反序列化的对象的时候会报错：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StreamCorruptedException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invalid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;code:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_6145ed810100z143.html&quot;&gt;解决方法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. 影响序列化&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;transient关键字&lt;/li&gt;
  &lt;li&gt;writeObject()方法与readObject()方法&lt;/li&gt;
  &lt;li&gt;Externalizable接口&lt;/li&gt;
  &lt;li&gt;readResolve()方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.51cto.com/art/201202/317181.htm&quot;&gt;详细介绍&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/javabean-class-java/&quot; title=&quot;geeks&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Java" /><summary type="html"></summary></entry></feed>